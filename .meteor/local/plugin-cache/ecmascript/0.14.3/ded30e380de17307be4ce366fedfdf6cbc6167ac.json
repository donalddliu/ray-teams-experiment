{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/donaldliu/Documents/ray-experiment/client/game/SocialExposure.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/game/SocialExposure.jsx","filename":"/Users/donaldliu/Documents/ray-experiment/client/game/SocialExposure.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/donaldliu/Documents/ray-experiment","root":"/Users/donaldliu/Documents/ray-experiment","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/donaldliu/Documents/ray-experiment/client/game/SocialExposure.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/game/SocialExposure.jsx"}},"code":"module.export({\n  default: () => SocialExposure\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Chat;\nmodule.link(\"@empirica/chat\", {\n  Chat(v) {\n    Chat = v;\n  }\n\n}, 1);\nlet TimeSync;\nmodule.link(\"meteor/mizzao:timesync\", {\n  TimeSync(v) {\n    TimeSync = v;\n  }\n\n}, 2);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 3);\nlet Slider;\nmodule.link(\"meteor/empirica:slider\", {\n  default(v) {\n    Slider = v;\n  }\n\n}, 4);\n\nclass SocialExposure extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.logIncomingMessage = (msgs, customKey) => {\n      const {\n        game,\n        round,\n        stage,\n        player\n      } = this.props;\n      console.log(game, round, stage, player);\n      console.log(round.get(\"\".concat(customKey)));\n      console.log(msgs);\n      console.log(customKey);\n      const messages = round.get(\"\".concat(customKey));\n      const mostrecentMsg = round.get(\"\".concat(customKey))[messages.length - 1];\n      stage.append(\"log\", {\n        verb: \"messageLog\",\n        subjectId: player.id,\n        object: msgs,\n        at: moment(TimeSync.serverTime(null, 1000))\n      });\n    };\n  }\n\n  renderSocialInteraction(otherPlayer) {\n    const value = otherPlayer.round.get(\"value\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alter\",\n      key: otherPlayer._id\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: otherPlayer.get(\"avatar\"),\n      className: \"profile-avatar\"\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"range\"\n    }, /*#__PURE__*/React.createElement(Slider, {\n      min: 0,\n      max: 1,\n      stepSize: 0.01,\n      value: value,\n      disabled: true,\n      hideHandleOnEmpty: true\n    })));\n  }\n\n  render() {\n    const {\n      game,\n      round,\n      player\n    } = this.props;\n    const network = player.get(\"neighbors\"); // reactive time value only updates at 1000 ms\n\n    const timeStamp = new Date(TimeSync.serverTime(null, 1000));\n\n    if (network.length === 0) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"social-exposure\"\n    }, network.map(otherNodeId => {\n      var pairOfPlayers = [player.get(\"nodeId\"), parseInt(otherNodeId)];\n      pairOfPlayers.sort((p1, p2) => p1 - p2);\n      const otherPlayerId = game.players.find(p => p.get(\"nodeId\") === parseInt(otherNodeId)).id;\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h2\", null, otherPlayerId), /*#__PURE__*/React.createElement(Chat, {\n        key: otherNodeId,\n        player: player,\n        scope: round,\n        timeStamp: timeStamp,\n        onIncomingMessage: this.logIncomingMessage,\n        customKey: \"\".concat(pairOfPlayers[0], \"-\").concat(pairOfPlayers[1])\n      }));\n    }));\n  }\n\n}","map":{"version":3,"sources":["client/game/SocialExposure.jsx"],"names":["module","export","default","SocialExposure","React","link","v","Chat","TimeSync","moment","Slider","Component","logIncomingMessage","msgs","customKey","game","round","stage","player","props","console","log","get","messages","mostrecentMsg","length","append","verb","subjectId","id","object","at","serverTime","renderSocialInteraction","otherPlayer","value","_id","render","network","timeStamp","Date","map","otherNodeId","pairOfPlayers","parseInt","sort","p1","p2","otherPlayerId","players","find","p"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Chat } from \"@empirica/chat\";\nimport { TimeSync } from \"meteor/mizzao:timesync\";\nimport moment from \"moment\";\nimport Slider from \"meteor/empirica:slider\";\n\n\nexport default class SocialExposure extends React.Component {\n  renderSocialInteraction(otherPlayer) {\n    const value = otherPlayer.round.get(\"value\");\n    return (\n      <div className=\"alter\" key={otherPlayer._id}>\n        <img src={otherPlayer.get(\"avatar\")} className=\"profile-avatar\" />\n        <div className=\"range\">\n          <Slider\n            min={0}\n            max={1}\n            stepSize={0.01}\n            value={value}\n            disabled\n            hideHandleOnEmpty\n          />\n        </div>\n      </div>\n    );\n  }\n\n  logIncomingMessage = (msgs, customKey) => {\n    const {game, round, stage, player} = this.props;\n    console.log(game, round, stage, player);\n    console.log(round.get(`${customKey}`));\n    console.log(msgs);\n    console.log(customKey);\n    const messages = round.get(`${customKey}`)\n    const mostrecentMsg = round.get(`${customKey}`)[messages.length -1];\n    stage.append(\"log\", {\n      verb: \"messageLog\",\n      subjectId: player.id,\n      object: msgs,\n      at: moment(TimeSync.serverTime(null, 1000)),\n    })\n  }\n\n  render() {\n    const { game, round, player } = this.props;\n\n    const network = player.get(\"neighbors\");\n    // reactive time value only updates at 1000 ms\n    const timeStamp = new Date(TimeSync.serverTime(null, 1000));\n\n    if (network.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"social-exposure\">\n        {/* <p>\n          <strong>There are {network.length} other players:</strong>\n        </p> */}\n        {/* {otherPlayers.map(p => this.renderSocialInteraction(p))} */}\n        {/* <Chat player={player} scope={round} /> */}\n\n        {network.map(otherNodeId => {\n          var pairOfPlayers = [player.get(\"nodeId\"), parseInt(otherNodeId)];\n          pairOfPlayers.sort((p1,p2) => p1 - p2);\n          const otherPlayerId = game.players.find(p => p.get(\"nodeId\") === parseInt(otherNodeId)).id\n          return (\n            <div>\n              <h2>{otherPlayerId}</h2>\n              <Chat\n                key={otherNodeId}\n                player={player}\n                scope={round}  \n                timeStamp={timeStamp}\n                onIncomingMessage={this.logIncomingMessage}           \n                customKey={`${pairOfPlayers[0]}-${pairOfPlayers[1]}`}\n              />\n            </div>\n            )\n          }\n        )}\n\n      </div>\n    );\n  }\n}\n"]},"sourceType":"module","hash":"ded30e380de17307be4ce366fedfdf6cbc6167ac"}
