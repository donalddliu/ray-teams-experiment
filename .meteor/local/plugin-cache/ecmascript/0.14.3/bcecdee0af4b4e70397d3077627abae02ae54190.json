{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/donaldliu/Documents/ray-experiment/client/game/SocialExposure.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/game/SocialExposure.jsx","filename":"/Users/donaldliu/Documents/ray-experiment/client/game/SocialExposure.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/donaldliu/Documents/ray-experiment","root":"/Users/donaldliu/Documents/ray-experiment","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/donaldliu/Documents/ray-experiment/client/game/SocialExposure.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/game/SocialExposure.jsx"}},"code":"var _createSuper;\n\nmodule.link(\"@babel/runtime/helpers/createSuper\", {\n  default: function (v) {\n    _createSuper = v;\n  }\n}, 0);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 1);\nmodule.export({\n  \"default\": function () {\n    return SocialExposure;\n  }\n});\nmodule.link(\"../chat/style.less\");\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar Chat;\nmodule.link(\"@empirica/chat\", {\n  Chat: function (v) {\n    Chat = v;\n  }\n}, 1);\nvar ChatContainer;\nmodule.link(\"../chat/ChatContainer.js\", {\n  \"default\": function (v) {\n    ChatContainer = v;\n  }\n}, 2);\nvar Message;\nmodule.link(\"../chat/Message.js\", {\n  \"default\": function (v) {\n    Message = v;\n  }\n}, 3);\nvar Footer;\nmodule.link(\"../chat/Footer.js\", {\n  \"default\": function (v) {\n    Footer = v;\n  }\n}, 4);\nvar TimeSync;\nmodule.link(\"meteor/mizzao:timesync\", {\n  TimeSync: function (v) {\n    TimeSync = v;\n  }\n}, 5);\nvar moment;\nmodule.link(\"moment\", {\n  \"default\": function (v) {\n    moment = v;\n  }\n}, 6);\nvar Slider;\nmodule.link(\"meteor/empirica:slider\", {\n  \"default\": function (v) {\n    Slider = v;\n  }\n}, 7);\n\nvar SocialExposure = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(SocialExposure, _React$Component);\n\n  var _super = _createSuper(SocialExposure);\n\n  function SocialExposure(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this.onOpenChat = function (customKey) {\n      var player = _this.props.player; // var pairOfPlayers = [player.get(\"nodeId\"), parseInt(otherPlayerNodeId)];\n      // pairOfPlayers.sort((p1,p2) => p1 - p2);\n      // var customKey = `${pairOfPlayers[0]}-${pairOfPlayers[1]}`;\n      // console.log(this.state);\n      // console.log(this.state.activeChats);\n\n      if (!_this.state.activeChats.includes(customKey)) {\n        _this.state.activeChats.push(customKey);\n\n        player.set(\"activeChats\", _this.state.activeChats);\n      }\n\n      console.log(\"Open Chat\");\n    };\n\n    _this.onCloseChat = function (customKey) {\n      var player = _this.props.player;\n\n      var newActiveChats = _this.state.activeChats.filter(function (chat) {\n        return chat !== customKey;\n      });\n\n      _this.setState({\n        activeChats: newActiveChats\n      });\n\n      player.set(\"activeChats\", newActiveChats);\n      console.log(\"Close chat\");\n      console.log(_this.state);\n    };\n\n    _this.audio = new Audio(\"sounds/notification-sound-7062.mp3\");\n\n    _this.logIncomingMessage = function (msgs, customKey) {\n      var _this$props = _this.props,\n          game = _this$props.game,\n          round = _this$props.round,\n          stage = _this$props.stage,\n          player = _this$props.player;\n      var messages = round.get(\"\" + customKey);\n      var mostRecentMsg = messages[messages.length - 1];\n      console.log(mostRecentMsg);\n      var sender = mostRecentMsg.player._id; // TODO: Check if this only appends if player chat is open\n      // onIncomingMessage logs the message for both sender and receiver\n      // Only log one copy of the message\n\n      if (player._id === sender) {\n        stage.append(\"log\", {\n          verb: \"messageLog\",\n          subjectId: player.id,\n          object: mostRecentMsg,\n          at: moment(TimeSync.serverTime(null, 1000))\n        });\n        console.log(customKey);\n        var pairOfPlayers = customKey.split(\"-\");\n        console.log(pairOfPlayers);\n        console.log(\"My nodeId = \" + player.get(\"nodeId\"));\n        var receiverId = pairOfPlayers.filter(function (id) {\n          return parseInt(id) !== player.get(\"nodeId\");\n        });\n        console.log(receiverId);\n        var receiver = game.players.find(function (p) {\n          return p.get(\"nodeId\") === parseInt(receiverId);\n        });\n        var receiverChats = receiver.get(\"activeChats\");\n        console.log(receiverChats);\n\n        if (!receiverChats.includes(customKey)) {\n          var newReceiverChats = receiverChats.push(customKey);\n          console.log(newReceiverChats);\n          receiver.set(\"activeChats\", newReceiverChats);\n        }\n\n        console.log(receiver.id);\n        console.log(receiver.get(\"activeChats\"));\n      }\n\n      if (player._id !== sender) {\n        console.log(\"Message was sent\");\n        var activeChats = player.get(\"activeChats\");\n\n        if (!activeChats.includes(customKey)) {\n          console.log(\"Chat closed but message delivered\");\n        }\n\n        _this.audio.play();\n      }\n    };\n\n    _this.state = {\n      activeChats: []\n    };\n    return _this;\n  }\n\n  var _proto = SocialExposure.prototype;\n\n  _proto.componentDidMount = function () {\n    function componentDidMount() {\n      var player = this.props.player; // Set the player's first activity at the start of the round\n\n      var activeChats = player.get(\"activeChats\");\n      this.setState({\n        activeChats: activeChats\n      });\n    }\n\n    return componentDidMount;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          game = _this$props2.game,\n          round = _this$props2.round,\n          player = _this$props2.player,\n          activeChats = _this$props2.activeChats;\n      var network = player.get(\"neighbors\"); // reactive time value only updates at 1000 ms\n\n      var timeStamp = new Date(TimeSync.serverTime(null, 1000));\n\n      if (network.length === 0) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"all-chats-container\"\n      }, network.map(function (otherNodeId) {\n        var pairOfPlayers = [player.get(\"nodeId\"), parseInt(otherNodeId)];\n        pairOfPlayers.sort(function (p1, p2) {\n          return p1 - p2;\n        });\n        var otherPlayer = game.players.find(function (p) {\n          return p.get(\"nodeId\") === parseInt(otherNodeId);\n        });\n        var otherPlayerId = otherPlayer.id;\n        var playerIsOnline = otherPlayer.online === true && !otherPlayer.get(\"inactive\");\n        var chatKey = pairOfPlayers[0] + \"-\" + pairOfPlayers[1];\n        var activeChats = player.get(\"activeChats\");\n        console.log(activeChats);\n        console.log(activeChats.includes(chatKey));\n        return (\n          /*#__PURE__*/\n          // <div style={{height: \"80%\"}}>\n          React.createElement(ChatContainer, {\n            docked: true,\n            key: otherNodeId,\n            player: player,\n            otherPlayer: otherPlayerId,\n            scope: round,\n            timeStamp: timeStamp,\n            customClassName: \"ray-chat-container\",\n            message: Message,\n            footer: Footer,\n            onIncomingMessage: _this2.logIncomingMessage,\n            customKey: chatKey // isActive={activeChats.includes(chatKey)}\n            ,\n            isOpen: activeChats.includes(chatKey),\n            playerIsOnline: playerIsOnline,\n            onOpenChat: function (customKey) {\n              return _this2.onOpenChat(customKey);\n            },\n            onCloseChat: function (customKey) {\n              return _this2.onCloseChat(customKey);\n            }\n          }) // </div>\n\n        );\n      }));\n    }\n\n    return render;\n  }();\n\n  return SocialExposure;\n}(React.Component);","map":{"version":3,"sources":["client/game/SocialExposure.jsx"],"names":["_createSuper","module","link","default","v","_inheritsLoose","export","SocialExposure","React","Chat","ChatContainer","Message","Footer","TimeSync","moment","Slider","props","onOpenChat","customKey","player","state","activeChats","includes","push","set","console","log","onCloseChat","newActiveChats","filter","chat","setState","audio","Audio","logIncomingMessage","msgs","game","round","stage","messages","get","mostRecentMsg","length","sender","_id","append","verb","subjectId","id","object","at","serverTime","pairOfPlayers","split","receiverId","parseInt","receiver","players","find","p","receiverChats","newReceiverChats","play","componentDidMount","render","network","timeStamp","Date","map","otherNodeId","sort","p1","p2","otherPlayer","otherPlayerId","playerIsOnline","online","chatKey","Component"],"mappings":"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","sourcesContent":["import \"../chat/style.less\";\n\nimport React from \"react\";\nimport { Chat } from \"@empirica/chat\";\nimport ChatContainer from \"../chat/ChatContainer.js\";\nimport  Message  from \"../chat/Message.js\";\nimport Footer from \"../chat/Footer.js\";\nimport { TimeSync } from \"meteor/mizzao:timesync\";\nimport moment from \"moment\";\nimport Slider from \"meteor/empirica:slider\";\n\n\nexport default class SocialExposure extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeChats: [],\n    }\n  }\n\n  componentDidMount() {\n    const {player} = this.props;\n    // Set the player's first activity at the start of the round\n    const activeChats = player.get(\"activeChats\");\n    this.setState({activeChats: activeChats});\n  }\n\n  onOpenChat = (customKey) => {\n    const {player} = this.props;\n    // var pairOfPlayers = [player.get(\"nodeId\"), parseInt(otherPlayerNodeId)];\n    // pairOfPlayers.sort((p1,p2) => p1 - p2);\n    // var customKey = `${pairOfPlayers[0]}-${pairOfPlayers[1]}`;\n    // console.log(this.state);\n    // console.log(this.state.activeChats);\n    if (!this.state.activeChats.includes(customKey)) {\n      this.state.activeChats.push(customKey);\n      player.set(\"activeChats\", this.state.activeChats);\n    }\n    console.log(\"Open Chat\");\n  }\n\n  onCloseChat = (customKey) => {\n    const {player} = this.props;\n    const newActiveChats = this.state.activeChats.filter((chat) => chat !== customKey);\n    this.setState({activeChats : newActiveChats});\n    player.set(\"activeChats\", newActiveChats);\n    console.log(\"Close chat\");\n    console.log(this.state);\n  }\n\n\n  audio = new Audio(`sounds/notification-sound-7062.mp3`);\n\n\n  logIncomingMessage = (msgs, customKey) => {\n    const {game, round, stage, player} = this.props;\n\n    const messages = round.get(`${customKey}`)\n    const mostRecentMsg = messages[messages.length -1];\n    console.log(mostRecentMsg);\n    const sender = mostRecentMsg.player._id;\n\n    // TODO: Check if this only appends if player chat is open\n    // onIncomingMessage logs the message for both sender and receiver\n    // Only log one copy of the message\n    if (player._id === sender) {\n      stage.append(\"log\", {\n        verb: \"messageLog\",\n        subjectId: player.id,\n        object: mostRecentMsg,\n        at: moment(TimeSync.serverTime(null, 1000)),\n      })\n      console.log(customKey);\n      const pairOfPlayers = customKey.split(\"-\");\n      console.log(pairOfPlayers);\n      console.log(`My nodeId = ${player.get(\"nodeId\")}`);\n      const receiverId = pairOfPlayers.filter((id) => parseInt(id) !== player.get(\"nodeId\")); \n      console.log(receiverId);\n      const receiver = game.players.find(p => p.get(\"nodeId\") === parseInt(receiverId));\n      const receiverChats = receiver.get(\"activeChats\");\n      console.log(receiverChats);\n      if (!receiverChats.includes(customKey)) {\n        const newReceiverChats = receiverChats.push(customKey);\n        console.log(newReceiverChats);\n        receiver.set(\"activeChats\", newReceiverChats);\n      }\n      \n      console.log(receiver.id);\n      console.log(receiver.get(\"activeChats\"));\n    }\n\n    if (player._id !== sender) {\n      console.log(\"Message was sent\");\n      const activeChats = player.get(\"activeChats\");\n\n      if (!activeChats.includes(customKey)) {\n        console.log(\"Chat closed but message delivered\");\n      }\n\n      this.audio.play();\n\n    }\n  }\n\n  render() {\n    const { game, round, player, activeChats } = this.props;\n\n    const network = player.get(\"neighbors\");\n    // reactive time value only updates at 1000 ms\n    const timeStamp = new Date(TimeSync.serverTime(null, 1000));\n\n    if (network.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"all-chats-container\">\n        {/* <p>\n          <strong>There are {network.length} other players:</strong>\n        </p> */}\n        {/* <Chat player={player} scope={round} /> */}\n\n        {network.map(otherNodeId => {\n          var pairOfPlayers = [player.get(\"nodeId\"), parseInt(otherNodeId)];\n          pairOfPlayers.sort((p1,p2) => p1 - p2);\n          const otherPlayer = game.players.find(p => p.get(\"nodeId\") === parseInt(otherNodeId));\n          const otherPlayerId = otherPlayer.id;\n          const playerIsOnline = otherPlayer.online === true && !otherPlayer.get(\"inactive\");\n          const chatKey = `${pairOfPlayers[0]}-${pairOfPlayers[1]}`;\n          const activeChats = player.get(\"activeChats\");\n          console.log(activeChats);\n          console.log(activeChats.includes(chatKey));\n          return (\n            // <div style={{height: \"80%\"}}>\n              <ChatContainer\n                docked={true}\n                key={otherNodeId}\n                player={player}\n                otherPlayer={otherPlayerId}\n                scope={round}  \n                timeStamp={timeStamp}\n                customClassName={\"ray-chat-container\"}\n                message={Message}\n                footer={Footer}\n                onIncomingMessage={this.logIncomingMessage}           \n                customKey={chatKey}\n                // isActive={activeChats.includes(chatKey)}\n                isOpen={activeChats.includes(chatKey)}\n                playerIsOnline={playerIsOnline}\n                onOpenChat = {(customKey) => this.onOpenChat(customKey)} \n                onCloseChat={(customKey) => this.onCloseChat(customKey)} \n              />\n              // </div>\n            )\n          }\n        )}\n\n\n\n\n      </div>\n    );\n  }\n}\n"]},"sourceType":"module","hash":"bcecdee0af4b4e70397d3077627abae02ae54190"}
