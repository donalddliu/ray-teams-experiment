{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/donaldliu/Documents/ray-experiment/client/game/SocialExposure.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/game/SocialExposure.jsx","filename":"/Users/donaldliu/Documents/ray-experiment/client/game/SocialExposure.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/donaldliu/Documents/ray-experiment","root":"/Users/donaldliu/Documents/ray-experiment","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/donaldliu/Documents/ray-experiment/client/game/SocialExposure.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/game/SocialExposure.jsx"}},"code":"module.export({\n  default: () => SocialExposure\n});\nmodule.link(\"../chat/stle.less\");\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Chat;\nmodule.link(\"@empirica/chat\", {\n  Chat(v) {\n    Chat = v;\n  }\n\n}, 1);\nlet ChatContainer;\nmodule.link(\"../chat/ChatContainer.js\", {\n  default(v) {\n    ChatContainer = v;\n  }\n\n}, 2);\nlet Message;\nmodule.link(\"../chat/Message.js\", {\n  default(v) {\n    Message = v;\n  }\n\n}, 3);\nlet Footer;\nmodule.link(\"../chat/Footer.js\", {\n  default(v) {\n    Footer = v;\n  }\n\n}, 4);\nlet TimeSync;\nmodule.link(\"meteor/mizzao:timesync\", {\n  TimeSync(v) {\n    TimeSync = v;\n  }\n\n}, 5);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 6);\nlet Slider;\nmodule.link(\"meteor/empirica:slider\", {\n  default(v) {\n    Slider = v;\n  }\n\n}, 7);\n\nclass SocialExposure extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.logIncomingMessage = (msgs, customKey) => {\n      const {\n        game,\n        round,\n        stage,\n        player\n      } = this.props;\n      const messages = round.get(\"\".concat(customKey));\n      const mostRecentMsg = messages[messages.length - 1];\n      const receiver = mostRecentMsg.player._id; // onIncomingMessage logs the message for both sender and receiver\n      // Only log one copy of the message\n\n      if (player._id === receiver) {\n        stage.append(\"log\", {\n          verb: \"messageLog\",\n          subjectId: player.id,\n          object: mostRecentMsg,\n          at: moment(TimeSync.serverTime(null, 1000))\n        });\n      }\n    };\n  }\n\n  renderSocialInteraction(otherPlayer) {\n    const value = otherPlayer.round.get(\"value\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alter\",\n      key: otherPlayer._id\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: otherPlayer.get(\"avatar\"),\n      className: \"profile-avatar\"\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"range\"\n    }, /*#__PURE__*/React.createElement(Slider, {\n      min: 0,\n      max: 1,\n      stepSize: 0.01,\n      value: value,\n      disabled: true,\n      hideHandleOnEmpty: true\n    })));\n  }\n\n  render() {\n    const {\n      game,\n      round,\n      player\n    } = this.props;\n    const network = player.get(\"neighbors\"); // reactive time value only updates at 1000 ms\n\n    const timeStamp = new Date(TimeSync.serverTime(null, 1000));\n\n    if (network.length === 0) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"social-exposure\"\n    }, network.map(otherNodeId => {\n      var pairOfPlayers = [player.get(\"nodeId\"), parseInt(otherNodeId)];\n      pairOfPlayers.sort((p1, p2) => p1 - p2);\n      const otherPlayerId = game.players.find(p => p.get(\"nodeId\") === parseInt(otherNodeId)).id;\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h2\", null, otherPlayerId), /*#__PURE__*/React.createElement(ChatContainer, {\n        docked: true,\n        key: otherNodeId,\n        player: player,\n        otherPlayer: otherPlayerId,\n        scope: round,\n        timeStamp: timeStamp,\n        customClassName: \"ray-chat-container\",\n        message: Message,\n        footer: Footer,\n        onIncomingMessage: this.logIncomingMessage,\n        customKey: \"\".concat(pairOfPlayers[0], \"-\").concat(pairOfPlayers[1])\n      }));\n    }));\n  }\n\n}","map":{"version":3,"sources":["client/game/SocialExposure.jsx"],"names":["module","export","default","SocialExposure","link","React","v","Chat","ChatContainer","Message","Footer","TimeSync","moment","Slider","Component","logIncomingMessage","msgs","customKey","game","round","stage","player","props","messages","get","mostRecentMsg","length","receiver","_id","append","verb","subjectId","id","object","at","serverTime","renderSocialInteraction","otherPlayer","value","render","network","timeStamp","Date","map","otherNodeId","pairOfPlayers","parseInt","sort","p1","p2","otherPlayerId","players","find","p"],"mappings":"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","sourcesContent":["import \"../chat/stle.less\";\n\nimport React from \"react\";\nimport { Chat } from \"@empirica/chat\";\nimport ChatContainer from \"../chat/ChatContainer.js\";\nimport  Message  from \"../chat/Message.js\";\nimport Footer from \"../chat/Footer.js\";\nimport { TimeSync } from \"meteor/mizzao:timesync\";\nimport moment from \"moment\";\nimport Slider from \"meteor/empirica:slider\";\n\n\nexport default class SocialExposure extends React.Component {\n  renderSocialInteraction(otherPlayer) {\n    const value = otherPlayer.round.get(\"value\");\n    return (\n      <div className=\"alter\" key={otherPlayer._id}>\n        <img src={otherPlayer.get(\"avatar\")} className=\"profile-avatar\" />\n        <div className=\"range\">\n          <Slider\n            min={0}\n            max={1}\n            stepSize={0.01}\n            value={value}\n            disabled\n            hideHandleOnEmpty\n          />\n        </div>\n      </div>\n    );\n  }\n\n  logIncomingMessage = (msgs, customKey) => {\n    const {game, round, stage, player} = this.props;\n\n    const messages = round.get(`${customKey}`)\n    const mostRecentMsg = messages[messages.length -1];\n    const receiver = mostRecentMsg.player._id;\n\n    // onIncomingMessage logs the message for both sender and receiver\n    // Only log one copy of the message\n    if (player._id === receiver) {\n      stage.append(\"log\", {\n        verb: \"messageLog\",\n        subjectId: player.id,\n        object: mostRecentMsg,\n        at: moment(TimeSync.serverTime(null, 1000)),\n      })\n    }\n  }\n\n  render() {\n    const { game, round, player } = this.props;\n\n    const network = player.get(\"neighbors\");\n    // reactive time value only updates at 1000 ms\n    const timeStamp = new Date(TimeSync.serverTime(null, 1000));\n\n    if (network.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"social-exposure\">\n        {/* <p>\n          <strong>There are {network.length} other players:</strong>\n        </p> */}\n        {/* {otherPlayers.map(p => this.renderSocialInteraction(p))} */}\n        {/* <Chat player={player} scope={round} /> */}\n\n        {network.map(otherNodeId => {\n          var pairOfPlayers = [player.get(\"nodeId\"), parseInt(otherNodeId)];\n          pairOfPlayers.sort((p1,p2) => p1 - p2);\n          const otherPlayerId = game.players.find(p => p.get(\"nodeId\") === parseInt(otherNodeId)).id\n          return (\n            <div>\n              <h2>{otherPlayerId}</h2>\n              <ChatContainer\n                docked={true}\n                key={otherNodeId}\n                player={player}\n                otherPlayer={otherPlayerId}\n                scope={round}  \n                timeStamp={timeStamp}\n                customClassName={\"ray-chat-container\"}\n                message={Message}\n                footer={Footer}\n                onIncomingMessage={this.logIncomingMessage}           \n                customKey={`${pairOfPlayers[0]}-${pairOfPlayers[1]}`}\n              />\n              {/* <ChatContainer\n                key={otherNodeId}\n                player={player}\n                scope={round}  \n                timeStamp={timeStamp}\n                onIncomingMessage={this.logIncomingMessage}           \n                customKey={`${pairOfPlayers[0]}-${pairOfPlayers[1]}`}\n              /> */}\n            </div>\n            )\n          }\n        )}\n\n      </div>\n    );\n  }\n}\n"]},"sourceType":"module","hash":"3f170b8d36cee90c543928679a624b92416b82e3"}
