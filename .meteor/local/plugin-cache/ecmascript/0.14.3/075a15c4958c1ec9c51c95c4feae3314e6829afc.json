{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/donaldliu/Documents/ray-experiment/client/game/RoundMetaData.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/game/RoundMetaData.jsx","filename":"/Users/donaldliu/Documents/ray-experiment/client/game/RoundMetaData.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/donaldliu/Documents/ray-experiment","root":"/Users/donaldliu/Documents/ray-experiment","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/donaldliu/Documents/ray-experiment/client/game/RoundMetaData.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/game/RoundMetaData.jsx"}},"code":"let React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Timer;\nmodule.link(\"./Timer.jsx\", {\n  default(v) {\n    Timer = v;\n  }\n\n}, 1);\nlet StageTimeWrapper;\nmodule.link(\"meteor/empirica:core\", {\n  StageTimeWrapper(v) {\n    StageTimeWrapper = v;\n  }\n\n}, 2);\nlet TimeSync;\nmodule.link(\"meteor/mizzao:timesync\", {\n  TimeSync(v) {\n    TimeSync = v;\n  }\n\n}, 3);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 4);\n\nclass RoundMetaData extends React.Component {\n  render() {\n    const {\n      game,\n      round,\n      stage,\n      player\n    } = this.props;\n    const playerId = player.id;\n    const taskName = stage.displayName;\n    const totalTaskRounds = game.treatment.numTaskRounds;\n    const currentTime = moment(TimeSync.serverTime(null, 1000));\n    const playerLastActive = player.get(\"lastActive\");\n    const inactiveDuration = game.treatment.userInactivityDuration;\n    const timeDiff = currentTime.diff(playerLastActive, 'seconds');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metadata-container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-avatar-container\"\n    }, player.get(\"avatar\") ? /*#__PURE__*/React.createElement(\"img\", {\n      src: player.get(\"avatar\"),\n      width: \"100px\",\n      height: \"100px\"\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: \"images/icon-profile-white.png\",\n      width: \"100px\",\n      height: \"100px\"\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-name-container\"\n    }, playerId), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"round-number-container\"\n    }, taskName, \" of \", totalTaskRounds), /*#__PURE__*/React.createElement(\"div\", null, timeDiff), /*#__PURE__*/React.createElement(Timer, {\n      stage: stage\n    }));\n  }\n\n}\n\nmodule.exportDefault(RoundMetaData = StageTimeWrapper(RoundMetaData));","map":{"version":3,"sources":["client/game/RoundMetaData.jsx"],"names":["React","module","link","default","v","Timer","StageTimeWrapper","TimeSync","moment","RoundMetaData","Component","render","game","round","stage","player","props","playerId","id","taskName","displayName","totalTaskRounds","treatment","numTaskRounds","currentTime","serverTime","playerLastActive","get","inactiveDuration","userInactivityDuration","timeDiff","diff","exportDefault"],"mappings":"AAAA,IAAIA,KAAJ;AAAUC,MAAM,CAACC,IAAP,CAAY,OAAZ,EAAoB;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACJ,IAAAA,KAAK,GAACI,CAAN;AAAQ;;AAApB,CAApB,EAA0C,CAA1C;AAA6C,IAAIC,KAAJ;AAAUJ,MAAM,CAACC,IAAP,CAAY,aAAZ,EAA0B;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACC,IAAAA,KAAK,GAACD,CAAN;AAAQ;;AAApB,CAA1B,EAAgD,CAAhD;AAAmD,IAAIE,gBAAJ;AAAqBL,MAAM,CAACC,IAAP,CAAY,sBAAZ,EAAmC;AAACI,EAAAA,gBAAgB,CAACF,CAAD,EAAG;AAACE,IAAAA,gBAAgB,GAACF,CAAjB;AAAmB;;AAAxC,CAAnC,EAA6E,CAA7E;AAAgF,IAAIG,QAAJ;AAAaN,MAAM,CAACC,IAAP,CAAY,wBAAZ,EAAqC;AAACK,EAAAA,QAAQ,CAACH,CAAD,EAAG;AAACG,IAAAA,QAAQ,GAACH,CAAT;AAAW;;AAAxB,CAArC,EAA+D,CAA/D;AAAkE,IAAII,MAAJ;AAAWP,MAAM,CAACC,IAAP,CAAY,QAAZ,EAAqB;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACI,IAAAA,MAAM,GAACJ,CAAP;AAAS;;AAArB,CAArB,EAA4C,CAA5C;;AAQnT,MAAMK,aAAN,SAA4BT,KAAK,CAACU,SAAlC,CAA4C;AAExCC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA,KAAP;AAAcC,MAAAA,KAAd;AAAqBC,MAAAA;AAArB,QAA+B,KAAKC,KAA1C;AAEA,UAAMC,QAAQ,GAAGF,MAAM,CAACG,EAAxB;AACA,UAAMC,QAAQ,GAAGL,KAAK,CAACM,WAAvB;AACA,UAAMC,eAAe,GAAGT,IAAI,CAACU,SAAL,CAAeC,aAAvC;AAEA,UAAMC,WAAW,GAAGhB,MAAM,CAACD,QAAQ,CAACkB,UAAT,CAAoB,IAApB,EAA0B,IAA1B,CAAD,CAA1B;AACA,UAAMC,gBAAgB,GAAGX,MAAM,CAACY,GAAP,CAAW,YAAX,CAAzB;AACA,UAAMC,gBAAgB,GAAGhB,IAAI,CAACU,SAAL,CAAeO,sBAAxC;AACA,UAAMC,QAAQ,GAAGN,WAAW,CAACO,IAAZ,CAAiBL,gBAAjB,EAAmC,SAAnC,CAAjB;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC;AAAf,oBACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACKX,MAAM,CAACY,GAAP,CAAW,QAAX,iBACD;AAAK,MAAA,GAAG,EAAEZ,MAAM,CAACY,GAAP,CAAW,QAAX,CAAV;AAAgC,MAAA,KAAK,EAAC,OAAtC;AAA8C,MAAA,MAAM,EAAC;AAArD,MADC,gBAED;AAAK,MAAA,GAAG,iCAAR;AAA2C,MAAA,KAAK,EAAC,OAAjD;AAAyD,MAAA,MAAM,EAAC;AAAhE,MAHJ,CADJ,eAOI;AAAK,MAAA,SAAS,EAAC;AAAf,OACKV,QADL,CAPJ,eAUI;AAAK,MAAA,SAAS,EAAC;AAAf,OACKE,QADL,UACmBE,eADnB,CAVJ,eAaI,iCACKS,QADL,CAbJ,eAgBI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEhB;AAAd,MAhBJ,CADJ;AAoBH;;AAlCuC;;AAR5Cb,MAAM,CAAC+B,aAAP,CA6CgBvB,aAAa,GAAGH,gBAAgB,CAACG,aAAD,CA7ChD","sourcesContent":["import React from 'react';\nimport Timer from \"./Timer.jsx\";\n\nimport { StageTimeWrapper } from \"meteor/empirica:core\";\n\nimport { TimeSync } from \"meteor/mizzao:timesync\";\nimport moment from \"moment\";\n\nclass RoundMetaData extends React.Component {\n\n    render() {\n        const {game, round, stage, player} = this.props; \n\n        const playerId = player.id;\n        const taskName = stage.displayName;\n        const totalTaskRounds = game.treatment.numTaskRounds;\n\n        const currentTime = moment(TimeSync.serverTime(null, 1000));\n        const playerLastActive = player.get(\"lastActive\");\n        const inactiveDuration = game.treatment.userInactivityDuration;\n        const timeDiff = currentTime.diff(playerLastActive, 'seconds');\n        \n        return(\n            <div className=\"metadata-container\">\n                <div className=\"player-avatar-container\">\n                    {player.get(\"avatar\") ? \n                    <img src={player.get(\"avatar\")} width=\"100px\" height=\"100px\"/> : \n                    <img src={`images/icon-profile-white.png`} width=\"100px\" height=\"100px\" />\n                    }\n                </div>\n                <div className=\"player-name-container\">\n                    {playerId}\n                </div>\n                <div className=\"round-number-container\">\n                    {taskName} of {totalTaskRounds}\n                </div>\n                <div>\n                    {timeDiff}\n                </div>\n                <Timer stage={stage}/>\n            </div>\n        )\n    }\n}\n\nexport default (RoundMetaData = StageTimeWrapper(RoundMetaData));\n"]},"sourceType":"module","hash":"075a15c4958c1ec9c51c95c4feae3314e6829afc"}
