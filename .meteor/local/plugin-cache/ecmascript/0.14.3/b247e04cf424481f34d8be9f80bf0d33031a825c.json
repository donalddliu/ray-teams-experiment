{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/donaldliu/Documents/ray-experiment/client/game/Round.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/game/Round.jsx","filename":"/Users/donaldliu/Documents/ray-experiment/client/game/Round.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/donaldliu/Documents/ray-experiment","root":"/Users/donaldliu/Documents/ray-experiment","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/donaldliu/Documents/ray-experiment/client/game/Round.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/game/Round.jsx"}},"code":"var _createSuper;\n\nmodule.link(\"@babel/runtime/helpers/createSuper\", {\n  default: function (v) {\n    _createSuper = v;\n  }\n}, 0);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 1);\nmodule.export({\n  \"default\": function () {\n    return Round;\n  }\n});\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar PlayerProfile;\nmodule.link(\"./PlayerProfile.jsx\", {\n  \"default\": function (v) {\n    PlayerProfile = v;\n  }\n}, 1);\nvar SocialExposure;\nmodule.link(\"./SocialExposure.jsx\", {\n  \"default\": function (v) {\n    SocialExposure = v;\n  }\n}, 2);\nvar MyNetwork;\nmodule.link(\"./MyNetwork.jsx\", {\n  \"default\": function (v) {\n    MyNetwork = v;\n  }\n}, 3);\nvar Results;\nmodule.link(\"./Results.jsx\", {\n  \"default\": function (v) {\n    Results = v;\n  }\n}, 4);\nvar Task;\nmodule.link(\"./Task.jsx\", {\n  \"default\": function (v) {\n    Task = v;\n  }\n}, 5);\nvar Timer;\nmodule.link(\"./Timer.jsx\", {\n  \"default\": function (v) {\n    Timer = v;\n  }\n}, 6);\nvar MidSurveyOne;\nmodule.link(\"./mid-survey/MidSurvey1\", {\n  \"default\": function (v) {\n    MidSurveyOne = v;\n  }\n}, 7);\nvar MidSurveyTwo;\nmodule.link(\"./mid-survey/MidSurvey2\", {\n  \"default\": function (v) {\n    MidSurveyTwo = v;\n  }\n}, 8);\nvar MidSurveyThree;\nmodule.link(\"./mid-survey/MidSurvey3\", {\n  \"default\": function (v) {\n    MidSurveyThree = v;\n  }\n}, 9);\nvar MidSurveyFour;\nmodule.link(\"./mid-survey/MidSurvey4\", {\n  \"default\": function (v) {\n    MidSurveyFour = v;\n  }\n}, 10);\nvar MidSurveyFive;\nmodule.link(\"./mid-survey/MidSurvey5\", {\n  \"default\": function (v) {\n    MidSurveyFive = v;\n  }\n}, 11);\n\nvar Round = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Round, _React$Component);\n\n  var _super = _createSuper(Round);\n\n  function Round(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this.onOpenChat = function (otherPlayerNodeId) {\n      var player = _this.props.player;\n      var pairOfPlayers = [player.get(\"nodeId\"), parseInt(otherPlayerNodeId)];\n      pairOfPlayers.sort(function (p1, p2) {\n        return p1 - p2;\n      });\n      var customKey = pairOfPlayers[0] + \"-\" + pairOfPlayers[1];\n      console.log(_this.state);\n      console.log(_this.state.activeChats);\n\n      if (!_this.state.activeChats.includes(customKey)) {\n        _this.state.activeChats.push(customKey);\n      }\n\n      console.log(_this.state);\n    };\n\n    _this.onCloseChat = function (customKey) {\n      var newActiveChats = _this.state.activeChats.filter(function (chat) {\n        return chat !== customKey;\n      });\n\n      _this.setState({\n        activeChats: newActiveChats\n      });\n\n      console.log(_this.state);\n    };\n\n    _this.renderSurvey = function () {\n      var stage = _this.props.stage;\n\n      if (stage.name === \"Survey1\") {\n        return /*#__PURE__*/React.createElement(MidSurveyOne, null);\n      } else if (stage.name === \"Survey2\") {\n        return /*#__PURE__*/React.createElement(MidSurveyTwo, null);\n      } else if (stage.name === \"Survey3\") {\n        return /*#__PURE__*/React.createElement(MidSurveyThree, null);\n      } else if (stage.name === \"Survey4\") {\n        return /*#__PURE__*/React.createElement(MidSurveyFour, null);\n      } else if (stage.name === \"Survey5\") {\n        return /*#__PURE__*/React.createElement(MidSurveyFive, null);\n      }\n    };\n\n    _this.state = {\n      activeChats: []\n    };\n    return _this;\n  }\n\n  var _proto = Round.prototype;\n\n  _proto.render = function () {\n    function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          stage = _this$props.stage,\n          round = _this$props.round,\n          player = _this$props.player,\n          game = _this$props.game; // const showResults = stage.get(\"showResults\");\n      // if (showResults) {\n      //   const result = stage.get(\"result\")\n      //   return (\n      //   <div>\n      //     <StageResult stage={stage} showResults={showResults} result={result} timer={10}/>\n      //   </div>\n      //   )\n      // }\n\n      if (stage.name === \"Result\") {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"round\"\n        }, /*#__PURE__*/React.createElement(Results, {\n          game: game,\n          round: round,\n          stage: stage\n        }), /*#__PURE__*/React.createElement(Timer, {\n          stage: stage\n        }));\n      } else if (stage.name.includes(\"Survey\")) {\n        console.log(stage.name);\n\n        if (stage.name === \"Survey1\") {\n          return /*#__PURE__*/React.createElement(MidSurveyOne, props);\n        } else if (stage.name === \"Survey2\") {\n          return /*#__PURE__*/React.createElement(MidSurveyTwo, null);\n        } else if (stage.name === \"Survey3\") {\n          return /*#__PURE__*/React.createElement(MidSurveyThree, null);\n        } else if (stage.name === \"Survey4\") {\n          return /*#__PURE__*/React.createElement(MidSurveyFour, null);\n        } else if (stage.name === \"Survey5\") {\n          return /*#__PURE__*/React.createElement(MidSurveyFive, null);\n        }\n      } else {\n        // Load the round\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"round\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"content\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"task-network-container\"\n        }, /*#__PURE__*/React.createElement(Task, {\n          game: game,\n          round: round,\n          stage: stage,\n          player: player\n        }), /*#__PURE__*/React.createElement(MyNetwork, {\n          game: game,\n          round: round,\n          stage: stage,\n          player: player,\n          onOpenChat: function (otherPlayerNodeId) {\n            return _this2.onOpenChat(otherPlayerNodeId);\n          }\n        })), /*#__PURE__*/React.createElement(SocialExposure, {\n          game: game,\n          round: round,\n          stage: stage,\n          player: player,\n          onCloseChat: function (customKey) {\n            return _this2.onCloseChat(customKey);\n          },\n          activeChats: this.state.activeChats\n        })));\n      }\n    }\n\n    return render;\n  }();\n\n  return Round;\n}(React.Component);","map":{"version":3,"sources":["client/game/Round.jsx"],"names":["_createSuper","module","link","default","v","_inheritsLoose","export","Round","React","PlayerProfile","SocialExposure","MyNetwork","Results","Task","Timer","MidSurveyOne","MidSurveyTwo","MidSurveyThree","MidSurveyFour","MidSurveyFive","props","onOpenChat","otherPlayerNodeId","player","pairOfPlayers","get","parseInt","sort","p1","p2","customKey","console","log","state","activeChats","includes","push","onCloseChat","newActiveChats","filter","chat","setState","renderSurvey","stage","name","render","round","game","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport PlayerProfile from \"./PlayerProfile.jsx\";\nimport SocialExposure from \"./SocialExposure.jsx\";\nimport MyNetwork from \"./MyNetwork.jsx\";\nimport Results from \"./Results.jsx\";\nimport Task from \"./Task.jsx\";\nimport Timer from \"./Timer.jsx\";\n\nimport MidSurveyOne from \"./mid-survey/MidSurvey1\";\nimport MidSurveyTwo from \"./mid-survey/MidSurvey2\";\nimport MidSurveyThree from \"./mid-survey/MidSurvey3\";\nimport MidSurveyFour from \"./mid-survey/MidSurvey4\";\nimport MidSurveyFive from \"./mid-survey/MidSurvey5\";\n\nexport default class Round extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeChats : [],\n    }\n}\n\n  onOpenChat = (otherPlayerNodeId) => {\n    const {player} = this.props;\n    var pairOfPlayers = [player.get(\"nodeId\"), parseInt(otherPlayerNodeId)];\n    pairOfPlayers.sort((p1,p2) => p1 - p2);\n    var customKey = `${pairOfPlayers[0]}-${pairOfPlayers[1]}`;\n    console.log(this.state);\n    console.log(this.state.activeChats);\n    if (!this.state.activeChats.includes(customKey)) {\n      this.state.activeChats.push(customKey);\n    }\n\n    console.log(this.state);\n  }\n\n  onCloseChat = (customKey) => {\n    const newActiveChats = this.state.activeChats.filter((chat) => chat !== customKey);\n    this.setState({activeChats : newActiveChats});\n    console.log(this.state);\n  }\n\n  renderSurvey = () => {\n    const {stage} = this.props;\n    if (stage.name === \"Survey1\") {\n      return (<MidSurveyOne />)\n    } else if (stage.name === \"Survey2\") {\n      return (<MidSurveyTwo />)\n    } else if (stage.name === \"Survey3\") {\n      return (<MidSurveyThree />)\n    } else if (stage.name === \"Survey4\") {\n      return (<MidSurveyFour />)\n    } else if (stage.name === \"Survey5\") {\n      return (<MidSurveyFive />)\n    }\n  }\n\n  render() {\n    const { stage, round, player, game } = this.props;\n    // const showResults = stage.get(\"showResults\");\n\n    // if (showResults) {\n    //   const result = stage.get(\"result\")\n    //   return (\n    //   <div>\n    //     <StageResult stage={stage} showResults={showResults} result={result} timer={10}/>\n    //   </div>\n    //   )\n    // }\n\n    if (stage.name === \"Result\") {\n      return (\n        <div className=\"round\">\n          <Results game={game} round={round} stage={stage}/> \n          <Timer stage={stage}/>\n        </div>\n      )\n    } else if (stage.name.includes(\"Survey\")){\n      console.log(stage.name);\n      if (stage.name === \"Survey1\") {\n        return <MidSurveyOne {...props}/>\n      } else if (stage.name === \"Survey2\") {\n        return <MidSurveyTwo />\n      } else if (stage.name === \"Survey3\") {\n        return <MidSurveyThree />\n      } else if (stage.name === \"Survey4\") {\n        return <MidSurveyFour />\n      } else if (stage.name === \"Survey5\") {\n        return <MidSurveyFive />\n      }\n\n    } else { // Load the round\n      \n      return (\n        <div className=\"round\">\n          <div className=\"content\">\n            {/* <PlayerProfile player={player} stage={stage} game={game} /> */}\n            <div className=\"task-network-container\">\n              <Task game={game} round={round} stage={stage} player={player} />\n              <MyNetwork game={game} round={round} stage={stage} player={player} onOpenChat={(otherPlayerNodeId) => this.onOpenChat(otherPlayerNodeId)}/>\n            </div>\n            <SocialExposure game={game} round={round} stage={stage} player={player} onCloseChat={(customKey) => this.onCloseChat(customKey)} activeChats={this.state.activeChats} />\n            {/* <Timer stage={stage} /> */}\n          </div>\n        </div>\n      );\n    }\n  } \n}\n"]},"sourceType":"module","hash":"b247e04cf424481f34d8be9f80bf0d33031a825c"}
