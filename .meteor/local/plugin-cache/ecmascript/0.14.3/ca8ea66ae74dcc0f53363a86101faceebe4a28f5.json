{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/donaldliu/Documents/ray-experiment/client/game/TaskResponse.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/game/TaskResponse.jsx","filename":"/Users/donaldliu/Documents/ray-experiment/client/game/TaskResponse.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/donaldliu/Documents/ray-experiment","root":"/Users/donaldliu/Documents/ray-experiment","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/donaldliu/Documents/ray-experiment/client/game/TaskResponse.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/game/TaskResponse.jsx"}},"code":"module.export({\n  default: () => TaskResponse\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Slider;\nmodule.link(\"meteor/empirica:slider\", {\n  default(v) {\n    Slider = v;\n  }\n\n}, 1);\nlet SymbolButton;\nmodule.link(\"./SymbolButton.jsx\", {\n  default(v) {\n    SymbolButton = v;\n  }\n\n}, 2);\n\nclass TaskResponse extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleChange = num => {\n      const {\n        player\n      } = this.props;\n      const value = Math.round(num * 100) / 100;\n      player.round.set(\"value\", value);\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.player.stage.submit();\n    };\n\n    this.handleButtonSelect = name => {\n      const {\n        stage,\n        player,\n        game\n      } = this.props;\n      console.log(\"Button SELECTED\");\n      stage.set(\"selectedButton\", name);\n      console.log(stage);\n      console.log(player);\n    };\n  }\n\n  renderSubmitted() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task-response\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"response-submitted\"\n    }, /*#__PURE__*/React.createElement(\"h5\", null, \"Waiting on other players...\"), \"Please wait until all players are ready\"));\n  }\n\n  renderSlider() {\n    const {\n      player\n    } = this.props;\n    const value = player.round.get(\"value\");\n    return /*#__PURE__*/React.createElement(Slider, {\n      min: 0,\n      max: 1,\n      stepSize: 0.01,\n      labelStepSize: 0.25,\n      onChange: this.handleChange,\n      value: value,\n      hideHandleOnEmpty: true\n    });\n  }\n\n  renderButton() {\n    const {\n      stage,\n      player,\n      game\n    } = this.props;\n    const task = stage.get(\"task\");\n    return task.symbols.map(symbol => /*#__PURE__*/React.createElement(SymbolButton, {\n      key: symbol,\n      name: symbol,\n      onButtonSelect: this.handleButtonSelect(),\n      stage: stage,\n      game: game,\n      player: player\n    }));\n  }\n\n  render() {\n    const {\n      stage,\n      player,\n      game\n    } = this.props;\n    const task = stage.get(\"task\"); // If the player already submitted, don't show the slider or submit button\n\n    if (player.stage.submitted) {\n      return this.renderSubmitted();\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task-response\"\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit\n    }, this.renderButton(), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\"\n    }, \"Submit\")));\n  }\n\n}","map":{"version":3,"sources":["client/game/TaskResponse.jsx"],"names":["module","export","default","TaskResponse","React","link","v","Slider","SymbolButton","Component","handleChange","num","player","props","value","Math","round","set","handleSubmit","event","preventDefault","stage","submit","handleButtonSelect","name","game","console","log","renderSubmitted","renderSlider","get","renderButton","task","symbols","map","symbol","render","submitted"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,OAAO,EAAC,MAAIC;AAAb,CAAd;AAA0C,IAAIC,KAAJ;AAAUJ,MAAM,CAACK,IAAP,CAAY,OAAZ,EAAoB;AAACH,EAAAA,OAAO,CAACI,CAAD,EAAG;AAACF,IAAAA,KAAK,GAACE,CAAN;AAAQ;;AAApB,CAApB,EAA0C,CAA1C;AAA6C,IAAIC,MAAJ;AAAWP,MAAM,CAACK,IAAP,CAAY,wBAAZ,EAAqC;AAACH,EAAAA,OAAO,CAACI,CAAD,EAAG;AAACC,IAAAA,MAAM,GAACD,CAAP;AAAS;;AAArB,CAArC,EAA4D,CAA5D;AAA+D,IAAIE,YAAJ;AAAiBR,MAAM,CAACK,IAAP,CAAY,oBAAZ,EAAiC;AAACH,EAAAA,OAAO,CAACI,CAAD,EAAG;AAACE,IAAAA,YAAY,GAACF,CAAb;AAAe;;AAA3B,CAAjC,EAA8D,CAA9D;;AAK7K,MAAMH,YAAN,SAA2BC,KAAK,CAACK,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SACxDC,YADwD,GACzCC,GAAG,IAAI;AACpB,YAAM;AAAEC,QAAAA;AAAF,UAAa,KAAKC,KAAxB;AACA,YAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWL,GAAG,GAAG,GAAjB,IAAwB,GAAtC;AACAC,MAAAA,MAAM,CAACI,KAAP,CAAaC,GAAb,CAAiB,OAAjB,EAA0BH,KAA1B;AACD,KALuD;;AAAA,SAOxDI,YAPwD,GAOzCC,KAAK,IAAI;AACtBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKP,KAAL,CAAWD,MAAX,CAAkBS,KAAlB,CAAwBC,MAAxB;AACD,KAVuD;;AAAA,SAYxDC,kBAZwD,GAYlCC,IAAD,IAAU;AAC7B,YAAM;AAAEH,QAAAA,KAAF;AAAST,QAAAA,MAAT;AAAiBa,QAAAA;AAAjB,UAA0B,KAAKZ,KAArC;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AAEAN,MAAAA,KAAK,CAACJ,GAAN,CAAU,gBAAV,EAA4BO,IAA5B;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYf,MAAZ;AACD,KAnBuD;AAAA;;AAqBxDgB,EAAAA,eAAe,GAAG;AAChB,wBACE;AAAK,MAAA,SAAS,EAAC;AAAf,oBACE;AAAK,MAAA,SAAS,EAAC;AAAf,oBACE,8DADF,4CADF,CADF;AAQD;;AAEDC,EAAAA,YAAY,GAAG;AACb,UAAM;AAAEjB,MAAAA;AAAF,QAAa,KAAKC,KAAxB;AACA,UAAMC,KAAK,GAAGF,MAAM,CAACI,KAAP,CAAac,GAAb,CAAiB,OAAjB,CAAd;AACA,wBACE,oBAAC,MAAD;AACE,MAAA,GAAG,EAAE,CADP;AAEE,MAAA,GAAG,EAAE,CAFP;AAGE,MAAA,QAAQ,EAAE,IAHZ;AAIE,MAAA,aAAa,EAAE,IAJjB;AAKE,MAAA,QAAQ,EAAE,KAAKpB,YALjB;AAME,MAAA,KAAK,EAAEI,KANT;AAOE,MAAA,iBAAiB;AAPnB,MADF;AAWD;;AAEDiB,EAAAA,YAAY,GAAG;AACb,UAAM;AAAEV,MAAAA,KAAF;AAAST,MAAAA,MAAT;AAAiBa,MAAAA;AAAjB,QAA0B,KAAKZ,KAArC;AACA,UAAMmB,IAAI,GAAGX,KAAK,CAACS,GAAN,CAAU,MAAV,CAAb;AAEA,WACEE,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAkBC,MAAD,iBACjB,oBAAC,YAAD;AACE,MAAA,GAAG,EAAEA,MADP;AAEE,MAAA,IAAI,EAAEA,MAFR;AAGE,MAAA,cAAc,EAAE,KAAKZ,kBAAL,EAHlB;AAIE,MAAA,KAAK,EAAEF,KAJT;AAKE,MAAA,IAAI,EAAEI,IALR;AAME,MAAA,MAAM,EAAEb;AANV,MADA,CADF;AAYD;;AAEDwB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA,KAAF;AAAST,MAAAA,MAAT;AAAiBa,MAAAA;AAAjB,QAA0B,KAAKZ,KAArC;AAEA,UAAMmB,IAAI,GAAGX,KAAK,CAACS,GAAN,CAAU,MAAV,CAAb,CAHO,CAKP;;AACA,QAAIlB,MAAM,CAACS,KAAP,CAAagB,SAAjB,EAA4B;AAC1B,aAAO,KAAKT,eAAL,EAAP;AACD;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC;AAAf,oBACE;AAAM,MAAA,QAAQ,EAAE,KAAKV;AAArB,OACG,KAAKa,YAAL,EADH,eAEE;AAAQ,MAAA,IAAI,EAAC;AAAb,gBAFF,CADF,CADF;AAQD;;AApFuD","sourcesContent":["import React from \"react\";\nimport Slider from \"meteor/empirica:slider\";\n\nimport SymbolButton from \"./SymbolButton.jsx\";\n\nexport default class TaskResponse extends React.Component {\n  handleChange = num => {\n    const { player } = this.props;\n    const value = Math.round(num * 100) / 100;\n    player.round.set(\"value\", value);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.player.stage.submit();\n  };\n\n  handleButtonSelect = (name) => {\n    const { stage, player, game } = this.props;\n    console.log(\"Button SELECTED\");\n\n    stage.set(\"selectedButton\", name);\n    console.log(stage);\n    console.log(player);\n  }\n\n  renderSubmitted() {\n    return (\n      <div className=\"task-response\">\n        <div className=\"response-submitted\">\n          <h5>Waiting on other players...</h5>\n          Please wait until all players are ready\n        </div>\n      </div>\n    );\n  }\n\n  renderSlider() {\n    const { player } = this.props;\n    const value = player.round.get(\"value\");\n    return (\n      <Slider\n        min={0}\n        max={1}\n        stepSize={0.01}\n        labelStepSize={0.25}\n        onChange={this.handleChange}\n        value={value}\n        hideHandleOnEmpty\n      />\n    );\n  }\n\n  renderButton() {\n    const { stage, player, game } = this.props;\n    const task = stage.get(\"task\");\n\n    return (\n      task.symbols.map((symbol) => \n      <SymbolButton \n        key={symbol}\n        name={symbol}\n        onButtonSelect={this.handleButtonSelect()}\n        stage={stage}\n        game={game}\n        player={player}\n      />\n      )\n    );\n  }\n\n  render() {\n    const { stage, player, game } = this.props;\n\n    const task = stage.get(\"task\");\n\n    // If the player already submitted, don't show the slider or submit button\n    if (player.stage.submitted) {\n      return this.renderSubmitted();\n    }\n\n    return (\n      <div className=\"task-response\">\n        <form onSubmit={this.handleSubmit}>\n          {this.renderButton()}\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n"]},"sourceType":"module","hash":"ca8ea66ae74dcc0f53363a86101faceebe4a28f5"}
