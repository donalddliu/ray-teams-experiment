{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/donaldliu/Documents/ray-experiment/client/intro/mid-survey/MidSurveyOne.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/intro/mid-survey/MidSurveyOne.jsx","filename":"/Users/donaldliu/Documents/ray-experiment/client/intro/mid-survey/MidSurveyOne.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/donaldliu/Documents/ray-experiment","root":"/Users/donaldliu/Documents/ray-experiment","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/donaldliu/Documents/ray-experiment/client/intro/mid-survey/MidSurveyOne.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/intro/mid-survey/MidSurveyOne.jsx"}},"code":"var _createSuper;\n\nmodule.link(\"@babel/runtime/helpers/createSuper\", {\n  default: function (v) {\n    _createSuper = v;\n  }\n}, 0);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 1);\nmodule.export({\n  \"default\": function () {\n    return MidSurveyOne;\n  }\n});\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar Centered;\nmodule.link(\"meteor/empirica:core\", {\n  Centered: function (v) {\n    Centered = v;\n  }\n}, 1);\n\nvar Radio = function (_ref) {\n  var selected = _ref.selected,\n      name = _ref.name,\n      value = _ref.value,\n      label = _ref.label,\n      onChange = _ref.onChange;\n  return /*#__PURE__*/React.createElement(\"label\", {\n    className: \"questionnaire-radio\"\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"quiz-button\",\n    type: \"radio\",\n    name: name,\n    value: value,\n    checked: selected === value,\n    onChange: onChange\n  }), label);\n};\n\nvar MidSurveyOne = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(MidSurveyOne, _React$Component);\n\n  var _super = _createSuper(MidSurveyOne);\n\n  function MidSurveyOne() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {};\n\n    _this.handleChange = function (event) {\n      var _this$setState;\n\n      var el = event.currentTarget;\n\n      _this.setState((_this$setState = {}, _this$setState[el.name] = el.value, _this$setState));\n    };\n\n    _this.handleSubmit = function (event) {\n      var _this$props = _this.props,\n          hasPrev = _this$props.hasPrev,\n          hasNext = _this$props.hasNext,\n          onNext = _this$props.onNext,\n          onPrev = _this$props.onPrev,\n          game = _this$props.game,\n          player = _this$props.player;\n      event.preventDefault(); // TODO: log player response to survey question\n\n      onNext();\n    };\n\n    return _this;\n  }\n\n  var _proto = MidSurveyOne.prototype;\n\n  _proto.render = function () {\n    function render() {\n      var _this2 = this;\n\n      var player = this.props.player;\n      var response = this.state.response; // const network = player.get(\"neighbors\");\n\n      var network = [];\n      var completedWidth = 590 / 5 * 1;\n      var uncompletedWidth = 590 - completedWidth;\n      return /*#__PURE__*/React.createElement(Centered, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"intro-heading questionnaire-heading\"\n      }, \" To complete the challenge, please fill in the following questionnaire \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"questionnaire-content-container\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"completed-heading\"\n      }, \" 1 \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"progress-bar\"\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"images/hr-color.png\",\n        width: completedWidth + \" px\",\n        height: \"7px\"\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        src: \"images/hr-color-dark.png\",\n        width: uncompletedWidth + \" px\",\n        height: \"7px\"\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"questionnaire-body\"\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"questionnaire-question\"\n      }, \" Did your group have a leader? If so, who?\"), network.map(function (otherNodeId) {\n        var otherPlayerId = game.players.find(function (p) {\n          return p.get(\"nodeId\") === parseInt(otherNodeId);\n        }).id;\n        return /*#__PURE__*/React.createElement(Radio, {\n          selected: response,\n          key: otherPlayerId,\n          name: \"response\",\n          value: otherPlayerId,\n          label: otherPlayerId,\n          onChange: _this2.handleChange\n        });\n      }), /*#__PURE__*/React.createElement(Radio, {\n        selected: response,\n        name: \"response\",\n        value: \"myself\",\n        label: \"Myself\",\n        onChange: this.handleChange\n      }), /*#__PURE__*/React.createElement(Radio, {\n        selected: response,\n        name: \"response\",\n        value: \"team\",\n        label: \"We worked as a team\",\n        onChange: this.handleChange\n      }), /*#__PURE__*/React.createElement(Radio, {\n        selected: response,\n        name: \"response\",\n        value: \"none\",\n        label: \"Our team did not have a leader\",\n        onChange: this.handleChange\n      })), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"questionnaire-btn-container\",\n        onSubmit: this.handleSubmit\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: !response ? \"arrow-button button-submit-disabled\" : \"arrow-button button-submit\",\n        disabled: !response,\n        type: \"submit\"\n      }, \" Submit \"))));\n    }\n\n    return render;\n  }();\n\n  return MidSurveyOne;\n}(React.Component);","map":{"version":3,"sources":["client/intro/mid-survey/MidSurveyOne.jsx"],"names":["_createSuper","module","link","default","v","_inheritsLoose","export","MidSurveyOne","React","Centered","Radio","selected","name","value","label","onChange","state","handleChange","event","el","currentTarget","setState","handleSubmit","props","hasPrev","hasNext","onNext","onPrev","game","player","preventDefault","render","response","network","completedWidth","uncompletedWidth","map","otherNodeId","otherPlayerId","players","find","p","get","parseInt","id","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n\nimport { Centered } from \"meteor/empirica:core\";\n\nconst Radio = ({ selected, name, value, label, onChange }) => (\n    <label className=\"questionnaire-radio\">\n        <input\n        className=\"quiz-button\"\n        type=\"radio\"\n        name={name}\n        value={value}\n        checked={selected === value}\n        onChange={onChange}\n        />\n        {label}\n    </label>\n);\n\nexport default class MidSurveyOne extends React.Component {\n  state = { };\n\n  handleChange = event => {\n    const el = event.currentTarget;\n    this.setState({ [el.name]: el.value });\n  };\n\n  handleSubmit = event => {\n    const { hasPrev, hasNext, onNext, onPrev, game, player } = this.props;\n    event.preventDefault();\n    // TODO: log player response to survey question\n    onNext();\n  };\n\n  render() {\n    const { player } = this.props;\n    const { response } = this.state;\n\n    // const network = player.get(\"neighbors\");\n    const network = [];\n    const completedWidth = 590/5 * 1\n    const uncompletedWidth = 590 - completedWidth;\n    return (\n      <Centered>\n        <div className=\"intro-heading questionnaire-heading\"> To complete the challenge, please fill in the following questionnaire </div>\n            <div className=\"questionnaire-content-container\">\n                <div className=\"completed-heading\"> 1 </div>\n                <div className=\"progress-bar\">\n                    <img src={`images/hr-color.png`} width={`${completedWidth} px`} height=\"7px\" />\n                    <img src={`images/hr-color-dark.png`} width={`${uncompletedWidth} px`} height=\"7px\" />\n                </div>\n                <div className=\"questionnaire-body\">\n                    <label className=\"questionnaire-question\"> Did your group have a leader? If so, who?</label>\n                    {network.map(otherNodeId => {\n                        const otherPlayerId = game.players.find(p => p.get(\"nodeId\") === parseInt(otherNodeId)).id\n                        return (\n                            <Radio\n                                selected={response}\n                                key={otherPlayerId}\n                                name=\"response\"\n                                value={otherPlayerId}\n                                label={otherPlayerId}\n                                onChange={this.handleChange}\n                            />\n                        )\n                        })\n                    }\n                    <Radio\n                        selected={response}\n                        name=\"response\"\n                        value=\"myself\"\n                        label=\"Myself\"\n                        onChange={this.handleChange}\n                    />\n                    <Radio\n                        selected={response}\n                        name=\"response\"\n                        value=\"team\"\n                        label=\"We worked as a team\"\n                        onChange={this.handleChange}\n                    />\n                    <Radio\n                        selected={response}\n                        name=\"response\"\n                        value=\"none\"\n                        label=\"Our team did not have a leader\"\n                        onChange={this.handleChange}\n                    />\n                </div>\n                <form className=\"questionnaire-btn-container\" onSubmit={this.handleSubmit}>\n                    <button \n                        className={!response ? \"arrow-button button-submit-disabled\" : \"arrow-button button-submit\"}\n                        disabled={!response} type=\"submit\"> Submit </button> \n                </form>\n            </div>\n      </Centered>\n    );\n  }\n}\n"]},"sourceType":"module","hash":"bf873cc58d1f4b9a463a9a7b51a3f1cfa3c0f754"}
