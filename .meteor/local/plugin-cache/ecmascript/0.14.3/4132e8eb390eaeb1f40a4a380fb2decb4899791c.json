{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/donaldliu/Documents/ray-experiment/client/game/Round.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/game/Round.jsx","filename":"/Users/donaldliu/Documents/ray-experiment/client/game/Round.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/donaldliu/Documents/ray-experiment","root":"/Users/donaldliu/Documents/ray-experiment","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/donaldliu/Documents/ray-experiment/client/game/Round.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/game/Round.jsx"}},"code":"let _extends;\n\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default(v) {\n    _extends = v;\n  }\n\n}, 0);\nmodule.export({\n  default: () => Round\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PlayerProfile;\nmodule.link(\"./PlayerProfile.jsx\", {\n  default(v) {\n    PlayerProfile = v;\n  }\n\n}, 1);\nlet SocialExposure;\nmodule.link(\"./SocialExposure.jsx\", {\n  default(v) {\n    SocialExposure = v;\n  }\n\n}, 2);\nlet MyNetwork;\nmodule.link(\"./MyNetwork.jsx\", {\n  default(v) {\n    MyNetwork = v;\n  }\n\n}, 3);\nlet RoundMetaData;\nmodule.link(\"./RoundMetaData.jsx\", {\n  default(v) {\n    RoundMetaData = v;\n  }\n\n}, 4);\nlet Results;\nmodule.link(\"./Results.jsx\", {\n  default(v) {\n    Results = v;\n  }\n\n}, 5);\nlet Task;\nmodule.link(\"./Task.jsx\", {\n  default(v) {\n    Task = v;\n  }\n\n}, 6);\nlet MidSurveyOne;\nmodule.link(\"./mid-survey/MidSurvey1\", {\n  default(v) {\n    MidSurveyOne = v;\n  }\n\n}, 7);\nlet MidSurveyTwo;\nmodule.link(\"./mid-survey/MidSurvey2\", {\n  default(v) {\n    MidSurveyTwo = v;\n  }\n\n}, 8);\nlet MidSurveyThree;\nmodule.link(\"./mid-survey/MidSurvey3\", {\n  default(v) {\n    MidSurveyThree = v;\n  }\n\n}, 9);\nlet MidSurveyFour;\nmodule.link(\"./mid-survey/MidSurvey4\", {\n  default(v) {\n    MidSurveyFour = v;\n  }\n\n}, 10);\nlet MidSurveyFive;\nmodule.link(\"./mid-survey/MidSurvey5\", {\n  default(v) {\n    MidSurveyFive = v;\n  }\n\n}, 11);\nlet Modal;\nmodule.link(\"./Modal\", {\n  default(v) {\n    Modal = v;\n  }\n\n}, 12);\nlet TimeSync;\nmodule.link(\"meteor/mizzao:timesync\", {\n  TimeSync(v) {\n    TimeSync = v;\n  }\n\n}, 13);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 14);\n\nclass Round extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onOpenModal = () => {\n      this.setState({\n        modalIsOpen: true\n      });\n    };\n\n    this.onCloseModal = () => {\n      this.setState({\n        modalIsOpen: false\n      });\n      player.set(\"lastActive\", moment(TimeSync.serverTime(null, 1000)));\n    };\n\n    this.onOpenChat = otherPlayerNodeId => {\n      const {\n        player\n      } = this.props;\n      var pairOfPlayers = [player.get(\"nodeId\"), parseInt(otherPlayerNodeId)];\n      pairOfPlayers.sort((p1, p2) => p1 - p2);\n      var customKey = \"\".concat(pairOfPlayers[0], \"-\").concat(pairOfPlayers[1]);\n      console.log(this.state);\n      console.log(this.state.activeChats);\n\n      if (!this.state.activeChats.includes(customKey)) {\n        this.state.activeChats.push(customKey);\n      }\n\n      console.log(this.state);\n    };\n\n    this.onCloseChat = customKey => {\n      const newActiveChats = this.state.activeChats.filter(chat => chat !== customKey);\n      this.setState({\n        activeChats: newActiveChats\n      });\n      console.log(this.state);\n    };\n\n    this.onNext = () => {\n      const {\n        player\n      } = this.props;\n      const curSurveyNumber = player.get(\"surveyNumber\");\n      player.set(\"surveyNumber\", curSurveyNumber + 1);\n    };\n\n    this.renderSurvey = () => {\n      const {\n        player\n      } = this.props;\n      const submitted = player.get(\"submitted\");\n\n      if (submitted) {\n        return this.renderSubmitted();\n      }\n\n      const surveyNumber = player.get(\"surveyNumber\");\n\n      if (surveyNumber === 1) {\n        return /*#__PURE__*/React.createElement(MidSurveyOne, _extends({}, this.props, {\n          onNext: this.onNext\n        }));\n      } else if (surveyNumber === 2) {\n        return /*#__PURE__*/React.createElement(MidSurveyTwo, _extends({}, this.props, {\n          onNext: this.onNext\n        }));\n      } else if (surveyNumber === 3) {\n        return /*#__PURE__*/React.createElement(MidSurveyThree, _extends({}, this.props, {\n          onNext: this.onNext\n        }));\n      } else if (surveyNumber === 4) {\n        return /*#__PURE__*/React.createElement(MidSurveyFour, _extends({}, this.props, {\n          onNext: this.onNext\n        }));\n      } else if (surveyNumber === 5) {\n        return /*#__PURE__*/React.createElement(MidSurveyFive, _extends({}, this.props, {\n          onNext: this.onNext\n        }));\n      }\n    };\n\n    this.state = {\n      activeChats: [],\n      modalIsOpen: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      player\n    } = this.props; // Set the player's first activity at the start of the round\n\n    player.set(\"lastActive\", moment(TimeSync.serverTime(null, 1000)));\n  }\n\n  renderSubmitted() {\n    const {\n      stage,\n      round,\n      player,\n      game\n    } = this.props; // Create a list of dots to show how many players submitted\n    // const completedWidth = 590/game.players.length * round.get(\"numPlayersSubmitted\");\n    // const uncompletedWidth = 590 - completedWidth;\n\n    const windowOffset = 75;\n    let completedWidth = window.innerWidth / game.players.length * round.get(\"numPlayersSubmitted\");\n    let uncompletedWidth = window.innerWidth - completedWidth;\n    completedWidth -= windowOffset;\n    uncompletedWidth -= windowOffset;\n\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"completed-bar\"\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"images/hr-color.png\",\n      width: \"\".concat(completedWidth, \" px\"),\n      height: \"7px\"\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"survey-wait-container\"\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"survey-wait-static-image\",\n      src: \"images/title-please-hold.png\"\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"survey-wait-content\"\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"results-text\"\n    }, \"Waiting for all members \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\"\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"images/hr-color.png\",\n      width: \"\".concat(completedWidth, \" px\"),\n      height: \"3px\"\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: \"images/hr-white.png\",\n      width: \"\".concat(uncompletedWidth, \" px\"),\n      height: \"3px\"\n    }))));\n  }\n\n  render() {\n    const {\n      stage,\n      round,\n      player,\n      game\n    } = this.props; // Create a list of dots to show how many players submitted\n\n    const playersSubmitted = round.get(\"numPlayersSubmitted\");\n    const playersNotSubmitted = game.players.length - playersSubmitted;\n    let filledDots = [];\n    let unfilledDots = [];\n\n    for (let i = 0; i < playersSubmitted; i++) {\n      filledDots.push( /*#__PURE__*/React.createElement(\"span\", {\n        className: \"filled-dot\"\n      }));\n    }\n\n    for (let i = 0; i < playersNotSubmitted; i++) {\n      unfilledDots.push( /*#__PURE__*/React.createElement(\"span\", {\n        className: \"empty-dot\"\n      }));\n    }\n\n    const currentTime = moment(TimeSync.serverTime(null, 1000));\n    const playerLastActive = player.get(\"lastActive\");\n    const inactiveDuration = game.treatment.userInactivityDuration;\n\n    if (currentTime.diff(playerLastActive, 'seconds') >= inactiveDuration) {\n      console.log(\"You have been kicked out of the game\");\n    } else if (currentTime.diff(playerLastActive, 'seconds') > inactiveDuration - 30) {\n      // Give them a one minute warning\n      if (is) this.onOpenModal();\n      console.log(\"Warning, you have been inactive for too long. You have one minute before you will be kicked due to inactivity.\");\n    }\n\n    console.log(currentTime.diff(playerLastActive, 'seconds')); // console.log(moment(TimeSync.serverTime(null, 1000)) - player.get(\"lastActive\"));\n    // if (showResults) {\n    //   const result = stage.get(\"result\")\n    //   return (\n    //   <div>\n    //     <StageResult stage={stage} showResults={showResults} result={result} timer={10}/>\n    //   </div>\n    //   )\n    // }\n\n    if (stage.name === \"Result\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"round\"\n      }, /*#__PURE__*/React.createElement(Results, {\n        game: game,\n        round: round,\n        stage: stage\n      }));\n    } else if (stage.name === \"Survey\") {\n      return this.renderSurvey();\n    } else {\n      // Load the round\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"round\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"task-network-container\"\n      }, /*#__PURE__*/React.createElement(Task, {\n        game: game,\n        round: round,\n        stage: stage,\n        player: player\n      }), /*#__PURE__*/React.createElement(RoundMetaData, {\n        game: game,\n        round: round,\n        stage: stage,\n        player: player\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.onOpenModal\n      }, \" Open Modal \"), this.state.modalIsOpen && /*#__PURE__*/React.createElement(Modal, {\n        player: player,\n        onCloseModal: this.onCloseModal\n      })), /*#__PURE__*/React.createElement(SocialExposure, {\n        game: game,\n        round: round,\n        stage: stage,\n        player: player,\n        onCloseChat: customKey => this.onCloseChat(customKey),\n        activeChats: this.state.activeChats\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["client/game/Round.jsx"],"names":["_extends","module","link","default","v","export","Round","React","PlayerProfile","SocialExposure","MyNetwork","RoundMetaData","Results","Task","MidSurveyOne","MidSurveyTwo","MidSurveyThree","MidSurveyFour","MidSurveyFive","Modal","TimeSync","moment","Component","constructor","props","onOpenModal","setState","modalIsOpen","onCloseModal","player","set","serverTime","onOpenChat","otherPlayerNodeId","pairOfPlayers","get","parseInt","sort","p1","p2","customKey","console","log","state","activeChats","includes","push","onCloseChat","newActiveChats","filter","chat","onNext","curSurveyNumber","renderSurvey","submitted","renderSubmitted","surveyNumber","componentDidMount","stage","round","game","windowOffset","completedWidth","window","innerWidth","players","length","uncompletedWidth","render","playersSubmitted","playersNotSubmitted","filledDots","unfilledDots","i","currentTime","playerLastActive","inactiveDuration","treatment","userInactivityDuration","diff","is","name"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport PlayerProfile from \"./PlayerProfile.jsx\";\nimport SocialExposure from \"./SocialExposure.jsx\";\nimport MyNetwork from \"./MyNetwork.jsx\";\nimport RoundMetaData from './RoundMetaData.jsx';\nimport Results from \"./Results.jsx\";\nimport Task from \"./Task.jsx\";\n\nimport MidSurveyOne from \"./mid-survey/MidSurvey1\";\nimport MidSurveyTwo from \"./mid-survey/MidSurvey2\";\nimport MidSurveyThree from \"./mid-survey/MidSurvey3\";\nimport MidSurveyFour from \"./mid-survey/MidSurvey4\";\nimport MidSurveyFive from \"./mid-survey/MidSurvey5\";\n\nimport Modal from \"./Modal\";\n\nimport { TimeSync } from \"meteor/mizzao:timesync\";\nimport moment from \"moment\";\n\nexport default class Round extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeChats : [],\n      modalIsOpen: false,\n    }\n}\n\n  componentDidMount() {\n    const {player} = this.props;\n    // Set the player's first activity at the start of the round\n    player.set(\"lastActive\", moment(TimeSync.serverTime(null, 1000)));\n  }\n\n  onOpenModal = () => {\n    this.setState({modalIsOpen: true});\n  }\n\n  onCloseModal = () => {\n    this.setState({modalIsOpen: false});\n    player.set(\"lastActive\", moment(TimeSync.serverTime(null, 1000)));\n  }\n\n  onOpenChat = (otherPlayerNodeId) => {\n    const {player} = this.props;\n    var pairOfPlayers = [player.get(\"nodeId\"), parseInt(otherPlayerNodeId)];\n    pairOfPlayers.sort((p1,p2) => p1 - p2);\n    var customKey = `${pairOfPlayers[0]}-${pairOfPlayers[1]}`;\n    console.log(this.state);\n    console.log(this.state.activeChats);\n    if (!this.state.activeChats.includes(customKey)) {\n      this.state.activeChats.push(customKey);\n    }\n\n    console.log(this.state);\n  }\n\n  onCloseChat = (customKey) => {\n    const newActiveChats = this.state.activeChats.filter((chat) => chat !== customKey);\n    this.setState({activeChats : newActiveChats});\n    console.log(this.state);\n  }\n\n  onNext = () => {\n    const { player } = this.props;\n    const curSurveyNumber = player.get(\"surveyNumber\");\n    player.set(\"surveyNumber\", curSurveyNumber + 1);\n  }\n\n  renderSubmitted() {\n    const { stage, round, player, game } = this.props;\n\n    // Create a list of dots to show how many players submitted\n    // const completedWidth = 590/game.players.length * round.get(\"numPlayersSubmitted\");\n    // const uncompletedWidth = 590 - completedWidth;\n\n    const windowOffset = 75;\n    let completedWidth = (window.innerWidth/game.players.length * round.get(\"numPlayersSubmitted\"));\n    let uncompletedWidth = (window.innerWidth - completedWidth);\n\n    completedWidth -= windowOffset;\n    uncompletedWidth -= windowOffset;\n\n    <div className=\"completed-bar\">\n        <img src={`images/hr-color.png`} width={`${completedWidth} px`} height=\"7px\" />\n    </div>\n\n    return (\n      <div className=\"survey-wait-container\">\n        <img className=\"survey-wait-static-image\" src={`images/title-please-hold.png`} />\n        <div className=\"survey-wait-content\">\n          <h1 className=\"results-text\">Waiting for all members </h1>\n          <div className=\"progress-bar\">\n            <img src={`images/hr-color.png`} width={`${completedWidth} px`} height=\"3px\" />\n            <img src={`images/hr-white.png`} width={`${uncompletedWidth} px`} height=\"3px\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderSurvey = () => {\n    const { player } = this.props;\n    const submitted = player.get(\"submitted\");\n    if (submitted) {\n      return this.renderSubmitted();\n    }\n\n    const surveyNumber = player.get(\"surveyNumber\");\n    if (surveyNumber === 1) {\n      return <MidSurveyOne {...this.props} onNext={this.onNext}/>\n    } else if (surveyNumber === 2) {\n      return <MidSurveyTwo {...this.props} onNext={this.onNext}/>\n    } else if (surveyNumber === 3) {\n      return <MidSurveyThree {...this.props} onNext={this.onNext}/>\n    } else if (surveyNumber === 4) {\n      return <MidSurveyFour {...this.props} onNext={this.onNext}/>\n    } else if (surveyNumber === 5) {\n      return <MidSurveyFive {...this.props} onNext={this.onNext}/>\n    }\n  }\n\n  render() {\n    const { stage, round, player, game } = this.props;\n\n    // Create a list of dots to show how many players submitted\n    const playersSubmitted = round.get(\"numPlayersSubmitted\");\n    const playersNotSubmitted = game.players.length - playersSubmitted;\n    let filledDots = [];\n    let unfilledDots = [];\n    for (let i = 0; i < playersSubmitted; i++) {\n      filledDots.push(<span className=\"filled-dot\"></span>)\n    }\n    for (let i = 0; i < playersNotSubmitted; i++) {\n      unfilledDots.push(<span className=\"empty-dot\"></span>)\n    }\n\n    const currentTime = moment(TimeSync.serverTime(null, 1000));\n    const playerLastActive = player.get(\"lastActive\");\n    const inactiveDuration = game.treatment.userInactivityDuration;\n\n    if (currentTime.diff(playerLastActive, 'seconds') >= inactiveDuration) {\n      console.log(\"You have been kicked out of the game\");\n    }\n    else if (currentTime.diff(playerLastActive, 'seconds') > inactiveDuration - 30) { // Give them a one minute warning\n      if (is)\n      this.onOpenModal();\n      console.log(\"Warning, you have been inactive for too long. You have one minute before you will be kicked due to inactivity.\");\n    }\n    console.log(currentTime.diff(playerLastActive, 'seconds'));\n\n    // console.log(moment(TimeSync.serverTime(null, 1000)) - player.get(\"lastActive\"));\n\n    // if (showResults) {\n    //   const result = stage.get(\"result\")\n    //   return (\n    //   <div>\n    //     <StageResult stage={stage} showResults={showResults} result={result} timer={10}/>\n    //   </div>\n    //   )\n    // }\n\n    if (stage.name === \"Result\") {\n      return (\n        <div className=\"round\">\n          <Results game={game} round={round} stage={stage}/> \n        </div>\n      )\n    } else if (stage.name === \"Survey\"){\n      return this.renderSurvey()\n\n    } else { // Load the round\n      \n      return (\n        <div className=\"round\">\n          <div className=\"content\">\n            {/* <PlayerProfile player={player} stage={stage} game={game} /> */}\n            <div className=\"task-network-container\">\n              <Task game={game} round={round} stage={stage} player={player} />\n              {/* <MyNetwork game={game} round={round} stage={stage} player={player} onOpenChat={(otherPlayerNodeId) => this.onOpenChat(otherPlayerNodeId)}/> */}\n              <RoundMetaData game={game} round={round} stage={stage} player={player}/>\n              <button onClick={this.onOpenModal}> Open Modal </button>\n              {this.state.modalIsOpen && <Modal player={player} onCloseModal={this.onCloseModal} />}\n            </div>\n            <SocialExposure game={game} round={round} stage={stage} player={player} onCloseChat={(customKey) => this.onCloseChat(customKey)} activeChats={this.state.activeChats} />\n            {/* <Timer stage={stage} /> */}\n\n          </div>\n        </div>\n      );\n    }\n  } \n}\n"]},"sourceType":"module","hash":"4132e8eb390eaeb1f40a4a380fb2decb4899791c"}
