{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/donaldliu/Documents/ray-experiment/client/game/MyNetwork.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/game/MyNetwork.jsx","filename":"/Users/donaldliu/Documents/ray-experiment/client/game/MyNetwork.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/donaldliu/Documents/ray-experiment","root":"/Users/donaldliu/Documents/ray-experiment","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/donaldliu/Documents/ray-experiment/client/game/MyNetwork.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/game/MyNetwork.jsx"}},"code":"module.export({\n  default: () => MyNetwork\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PlayerTab;\nmodule.link(\"./PlayerTab\", {\n  default(v) {\n    PlayerTab = v;\n  }\n\n}, 1);\n\nclass MyNetwork extends React.Component {\n  render() {\n    const {\n      game,\n      stage,\n      round,\n      player\n    } = this.props;\n    const network = player.get(\"neighbors\");\n    return /*#__PURE__*/React.createElement(\"div\", null, \"HELLO\", network.map(otherNodeId => {\n      const otherPlayerId = game.players.find(p => p.get(\"nodeId\") === parseInt(otherNodeId)).id;\n      console.log(otherPlayerId);\n\n      /*#__PURE__*/\n      React.createElement(PlayerTab, {\n        playerId: otherPlayerId\n      });\n    }));\n  }\n\n}","map":{"version":3,"sources":["client/game/MyNetwork.jsx"],"names":["module","export","default","MyNetwork","React","link","v","PlayerTab","Component","render","game","stage","round","player","props","network","get","map","otherNodeId","otherPlayerId","players","find","p","parseInt","id","console","log"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,OAAO,EAAC,MAAIC;AAAb,CAAd;AAAuC,IAAIC,KAAJ;AAAUJ,MAAM,CAACK,IAAP,CAAY,OAAZ,EAAoB;AAACH,EAAAA,OAAO,CAACI,CAAD,EAAG;AAACF,IAAAA,KAAK,GAACE,CAAN;AAAQ;;AAApB,CAApB,EAA0C,CAA1C;AAA6C,IAAIC,SAAJ;AAAcP,MAAM,CAACK,IAAP,CAAY,aAAZ,EAA0B;AAACH,EAAAA,OAAO,CAACI,CAAD,EAAG;AAACC,IAAAA,SAAS,GAACD,CAAV;AAAY;;AAAxB,CAA1B,EAAoD,CAApD;;AAG7F,MAAMH,SAAN,SAAwBC,KAAK,CAACI,SAA9B,CAAwC;AAEnDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA,KAAP;AAAcC,MAAAA,KAAd;AAAqBC,MAAAA;AAArB,QAA+B,KAAKC,KAA1C;AACA,UAAMC,OAAO,GAAGF,MAAM,CAACG,GAAP,CAAW,WAAX,CAAhB;AACA,wBACI,0CAEKD,OAAO,CAACE,GAAR,CAAYC,WAAW,IAAI;AACxB,YAAMC,aAAa,GAAGT,IAAI,CAACU,OAAL,CAAaC,IAAb,CAAkBC,CAAC,IAAIA,CAAC,CAACN,GAAF,CAAM,QAAN,MAAoBO,QAAQ,CAACL,WAAD,CAAnD,EAAkEM,EAAxF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,aAAZ;;AACA;AAAA,0BAAC,SAAD;AAAW,QAAA,QAAQ,EAAEA;AAArB;AACH,KAJA,CAFL,CADJ;AAWH;;AAhBkD","sourcesContent":["import React from 'react';\nimport PlayerTab from './PlayerTab';\n\nexport default class MyNetwork extends React.Component {\n\n    render() {\n        const {game, stage, round, player} = this.props;\n        const network = player.get(\"neighbors\");\n        return (\n            <div>\n                HELLO\n                {network.map(otherNodeId => {\n                    const otherPlayerId = game.players.find(p => p.get(\"nodeId\") === parseInt(otherNodeId)).id;\n                    console.log(otherPlayerId);\n                    <PlayerTab playerId={otherPlayerId} />\n                })\n                }\n            </div>\n        )\n    }\n}"]},"sourceType":"module","hash":"d94752eab1afed8cbac0c890fa30e4538317eabe"}
