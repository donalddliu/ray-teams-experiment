{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/donaldliu/Documents/ray-experiment/client/intro/network-survey/NetworkSurvey3.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/intro/network-survey/NetworkSurvey3.jsx","filename":"/Users/donaldliu/Documents/ray-experiment/client/intro/network-survey/NetworkSurvey3.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/donaldliu/Documents/ray-experiment","root":"/Users/donaldliu/Documents/ray-experiment","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/donaldliu/Documents/ray-experiment/client/intro/network-survey/NetworkSurvey3.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/intro/network-survey/NetworkSurvey3.jsx"}},"code":"module.export({\n  default: () => NetworkSurveyThree\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Centered;\nmodule.link(\"meteor/empirica:core\", {\n  Centered(v) {\n    Centered = v;\n  }\n\n}, 1);\nlet HTMLSelect;\nmodule.link(\"@blueprintjs/core\", {\n  HTMLSelect(v) {\n    HTMLSelect = v;\n  }\n\n}, 2);\n\nconst DropdownSelect = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"bp4-html-select\"\n}, /*#__PURE__*/React.createElement(\"select\", {\n  defaultValue: \"\"\n}, /*#__PURE__*/React.createElement(\"option\", {\n  value: \"\",\n  disbaled: \"true\",\n  hidden: true\n}), /*#__PURE__*/React.createElement(\"option\", {\n  value: \"daily\"\n}, \"Daily\"), /*#__PURE__*/React.createElement(\"option\", {\n  value: \"weekly\"\n}, \"Weekly\"), /*#__PURE__*/React.createElement(\"option\", {\n  value: \"lessoften\"\n}, \"Less often\")));\n\nclass NetworkSurveyThree extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleChange = event => {\n      const el = event.currentTarget;\n      this.setState({\n        [el.name]: el.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      const {\n        onNext,\n        player\n      } = this.props;\n      event.preventDefault(); // TODO: log player response to survey question\n\n      onNext();\n    };\n  }\n\n  render() {\n    const {\n      game,\n      round,\n      stage,\n      player\n    } = this.props;\n    console.log(player.get(\"networkResponse\"));\n    const {\n      name1,\n      name2,\n      name3,\n      name4,\n      name5\n    } = {\n      name1: \"w\",\n      name2: \"a\",\n      name3: \"s\",\n      name4: \"d\",\n      name5: \"f\"\n    };\n    const filledOut = true; // const {name1, name2, name3, name4, name5} = player.get(\"networkResponse\");\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"network-survey-container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"network-survey-header\"\n    }, /*#__PURE__*/React.createElement(\"p\", null, \"THIS QUESTION ASKS FOR YOUR VIEW OF CONNECTIONS AMONG THE PEOPLE YOU NAMED. YOU ARE ALMOST FINISHED.\")), /*#__PURE__*/React.createElement(\"img\", {\n      src: \"images/hr-color.png\"\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"network-survey-body\"\n    }, /*#__PURE__*/React.createElement(\"p\", null, \"The people you cited on the previous page are listed in the table below. The task is indicate how often you communicate and interact with each of them. \"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"network-list\"\n    }, /*#__PURE__*/React.createElement(\"li\", null, \"\\u201CDaily\\u201D means this is someone you communicate with daily.\"), /*#__PURE__*/React.createElement(\"li\", null, \"\\u201CWeekly\\u201D indicates this is someone you usually interact with and communicate on a weekly basis.\"), /*#__PURE__*/React.createElement(\"li\", null, \"\\u201CLess often\\u201D indicates this is someone you speak to infrequently.\")), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"network-form\",\n      onSubmit: this.handleSubmit\n    }, /*#__PURE__*/React.createElement(\"p\", null, \" How often do you communicate with _ ? \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-row\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"dropdown-input-label\",\n      htmlFor: \"name1\"\n    }, \" \", /*#__PURE__*/React.createElement(\"p\", null, name1), \" \"), /*#__PURE__*/React.createElement(DropdownSelect, null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-row\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"dropdown-input-label\",\n      htmlFor: \"name2\"\n    }, \" \", /*#__PURE__*/React.createElement(\"p\", null, name2), \" \"), /*#__PURE__*/React.createElement(DropdownSelect, null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-row\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"dropdown-input-label\",\n      htmlFor: \"name3\"\n    }, \" \", /*#__PURE__*/React.createElement(\"p\", null, name3), \" \"), /*#__PURE__*/React.createElement(DropdownSelect, null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-row\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"dropdown-input-label\",\n      htmlFor: \"name4\"\n    }, \" \", /*#__PURE__*/React.createElement(\"p\", null, name4), \" \"), /*#__PURE__*/React.createElement(DropdownSelect, null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-row\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"dropdown-input-label\",\n      htmlFor: \"name5\"\n    }, \" \", /*#__PURE__*/React.createElement(\"p\", null, name5), \" \"), /*#__PURE__*/React.createElement(DropdownSelect, null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"network-button-container\"\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: !filledOut ? \"arrow-button button-submit-disabled\" : \"arrow-button button-submit\",\n      disabled: !filledOut,\n      type: \"submit\"\n    }, \" Next Page\")))));\n  }\n\n}","map":{"version":3,"sources":["client/intro/network-survey/NetworkSurvey3.jsx"],"names":["module","export","default","NetworkSurveyThree","React","link","v","Centered","HTMLSelect","DropdownSelect","Component","handleChange","event","el","currentTarget","setState","name","value","handleSubmit","onNext","player","props","preventDefault","render","game","round","stage","console","log","get","name1","name2","name3","name4","name5","filledOut"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n\nimport { Centered } from \"meteor/empirica:core\";\nimport { HTMLSelect } from \"@blueprintjs/core\";\n\nconst DropdownSelect = () => (\n    <div className=\"bp4-html-select\">\n        <select defaultValue=\"\">\n            <option value=\"\" disbaled=\"true\" hidden></option>\n            <option value=\"daily\">Daily</option>\n            <option value=\"weekly\">Weekly</option>\n            <option value=\"lessoften\">Less often</option>\n        </select>\n    </div>\n);\n\nexport default class NetworkSurveyThree extends React.Component {\n\n  handleChange = event => {\n    const el = event.currentTarget;\n    this.setState({ [el.name]: el.value });\n  };\n\n  handleSubmit = event => {\n    const { onNext, player } = this.props;\n    event.preventDefault();\n    // TODO: log player response to survey question\n    onNext();\n  };\n\n  render() {\n    const { game, round, stage, player } = this.props;\n    console.log(player.get(\"networkResponse\"));\n    const { name1, name2, name3, name4, name5 } = {name1: \"w\", name2: \"a\", name3: \"s\", name4: \"d\", name5:\"f\"};\n    const filledOut = true;\n    // const {name1, name2, name3, name4, name5} = player.get(\"networkResponse\");\n    \n    return (\n          <div className=\"network-survey-container\">\n                <div className=\"network-survey-header\">\n                    <p>\n                    THIS QUESTION ASKS FOR YOUR VIEW OF CONNECTIONS AMONG THE PEOPLE YOU NAMED. YOU ARE ALMOST FINISHED.\n                    </p>\n                </div>\n                <img src={`images/hr-color.png`} />\n                <div className=\"network-survey-body\">\n                    <p>The people you cited on the previous page are listed in the table below. The task is indicate how often you communicate and interact with each of them. </p>\n                    <ul className=\"network-list\">\n                        <li>\n                            “Daily” means this is someone you communicate with daily.\n                        </li>\n                        <li>\n                            “Weekly” indicates this is someone you usually interact with and communicate on a weekly basis.\n                        </li>\n                        <li>\n                            “Less often” indicates this is someone you speak to infrequently.\n                        </li>\n                    </ul>\n                    <form className=\"network-form\" onSubmit={this.handleSubmit}>\n                        <p> How often do you communicate with _ ? </p>\n                        <div className=\"input-row\">\n                            <label className=\"dropdown-input-label\" htmlFor=\"name1\"> <p>{name1}</p> </label>\n                            <DropdownSelect></DropdownSelect>\n                        </div>\n                        <div className=\"input-row\">\n                            <label className=\"dropdown-input-label\" htmlFor=\"name2\"> <p>{name2}</p> </label>\n                            <DropdownSelect></DropdownSelect>\n\n                        </div>\n                        <div className=\"input-row\">\n                            <label className=\"dropdown-input-label\" htmlFor=\"name3\"> <p>{name3}</p> </label>\n                            <DropdownSelect></DropdownSelect>\n\n                        </div>\n                        <div className=\"input-row\">\n                            <label className=\"dropdown-input-label\" htmlFor=\"name4\"> <p>{name4}</p> </label>\n                            <DropdownSelect></DropdownSelect>\n\n                        </div>\n                        <div className=\"input-row\">\n                            <label className=\"dropdown-input-label\" htmlFor=\"name5\"> <p>{name5}</p> </label>\n                            <DropdownSelect></DropdownSelect>\n\n                        </div>\n                        <div className=\"network-button-container\">\n                            <button \n                                className={!filledOut ? \"arrow-button button-submit-disabled\" : \"arrow-button button-submit\"}\n                                disabled={!filledOut} \n                                type=\"submit\"> Next Page\n                            </button> \n                        </div>\n                    </form>\n                </div>\n          </div>\n   \n    );\n  }\n}\n"]},"sourceType":"module","hash":"664691a878dca4b1071106763d1966ee42b22309"}
