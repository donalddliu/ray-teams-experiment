{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/donaldliu/Documents/ray-experiment/client/game/SocialExposure.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/game/SocialExposure.jsx","filename":"/Users/donaldliu/Documents/ray-experiment/client/game/SocialExposure.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/donaldliu/Documents/ray-experiment","root":"/Users/donaldliu/Documents/ray-experiment","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/donaldliu/Documents/ray-experiment/client/game/SocialExposure.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/game/SocialExposure.jsx"}},"code":"var _createSuper;\n\nmodule.link(\"@babel/runtime/helpers/createSuper\", {\n  default: function (v) {\n    _createSuper = v;\n  }\n}, 0);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 1);\nmodule.export({\n  \"default\": function () {\n    return SocialExposure;\n  }\n});\nmodule.link(\"../chat/style.less\");\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar Chat;\nmodule.link(\"@empirica/chat\", {\n  Chat: function (v) {\n    Chat = v;\n  }\n}, 1);\nvar ChatContainer;\nmodule.link(\"../chat/ChatContainer.js\", {\n  \"default\": function (v) {\n    ChatContainer = v;\n  }\n}, 2);\nvar Message;\nmodule.link(\"../chat/Message.js\", {\n  \"default\": function (v) {\n    Message = v;\n  }\n}, 3);\nvar Footer;\nmodule.link(\"../chat/Footer.js\", {\n  \"default\": function (v) {\n    Footer = v;\n  }\n}, 4);\nvar TimeSync;\nmodule.link(\"meteor/mizzao:timesync\", {\n  TimeSync: function (v) {\n    TimeSync = v;\n  }\n}, 5);\nvar moment;\nmodule.link(\"moment\", {\n  \"default\": function (v) {\n    moment = v;\n  }\n}, 6);\nvar Slider;\nmodule.link(\"meteor/empirica:slider\", {\n  \"default\": function (v) {\n    Slider = v;\n  }\n}, 7);\n\nvar SocialExposure = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(SocialExposure, _React$Component);\n\n  var _super = _createSuper(SocialExposure);\n\n  function SocialExposure() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.audio = new Audio(\"sounds/notification-sound-7062.mp3\");\n\n    _this.logIncomingMessage = function (msgs, customKey) {\n      var _this$props = _this.props,\n          game = _this$props.game,\n          round = _this$props.round,\n          stage = _this$props.stage,\n          player = _this$props.player;\n      var messages = round.get(\"\" + customKey);\n      var mostRecentMsg = messages[messages.length - 1];\n      console.log(mostRecentMsg);\n      var sender = mostRecentMsg.player._id; // TODO: Check if this only appends if player chat is open\n      // onIncomingMessage logs the message for both sender and receiver\n      // Only log one copy of the message\n\n      if (player._id === sender) {\n        stage.append(\"log\", {\n          verb: \"messageLog\",\n          subjectId: player.id,\n          object: mostRecentMsg,\n          at: moment(TimeSync.serverTime(null, 1000))\n        });\n      }\n\n      if (player._id !== sender) {\n        console.log(\"Received\");\n        console.log(\"Message pending\");\n        var activeChats = player.get(\"activeChats\");\n        if (activeChats.includes()) _this.audio.play();\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = SocialExposure.prototype;\n\n  _proto.renderSocialInteraction = function () {\n    function renderSocialInteraction(otherPlayer) {\n      var value = otherPlayer.round.get(\"value\");\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alter\",\n        key: otherPlayer._id\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: otherPlayer.get(\"avatar\"),\n        className: \"profile-avatar\"\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"range\"\n      }, /*#__PURE__*/React.createElement(Slider, {\n        min: 0,\n        max: 1,\n        stepSize: 0.01,\n        value: value,\n        disabled: true,\n        hideHandleOnEmpty: true\n      })));\n    }\n\n    return renderSocialInteraction;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          game = _this$props2.game,\n          round = _this$props2.round,\n          player = _this$props2.player,\n          onCloseChat = _this$props2.onCloseChat,\n          activeChats = _this$props2.activeChats;\n      var network = player.get(\"neighbors\"); // reactive time value only updates at 1000 ms\n\n      var timeStamp = new Date(TimeSync.serverTime(null, 1000));\n\n      if (network.length === 0) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"all-chats-container\"\n      }, network.map(function (otherNodeId) {\n        var pairOfPlayers = [player.get(\"nodeId\"), parseInt(otherNodeId)];\n        pairOfPlayers.sort(function (p1, p2) {\n          return p1 - p2;\n        });\n        var otherPlayer = game.players.find(function (p) {\n          return p.get(\"nodeId\") === parseInt(otherNodeId);\n        });\n        var otherPlayerId = otherPlayer.id;\n        var playerIsOnline = otherPlayer.online === true && !otherPlayer.get(\"inactive\");\n        var chatKey = pairOfPlayers[0] + \"-\" + pairOfPlayers[1];\n        return (\n          /*#__PURE__*/\n          // <div style={{height: \"80%\"}}>\n          React.createElement(ChatContainer, {\n            docked: true,\n            key: otherNodeId,\n            player: player,\n            otherPlayer: otherPlayerId,\n            scope: round,\n            timeStamp: timeStamp,\n            customClassName: \"ray-chat-container\",\n            message: Message,\n            footer: Footer,\n            onIncomingMessage: _this2.logIncomingMessage,\n            customKey: chatKey // isActive={activeChats.includes(chatKey)}\n            ,\n            isActive: true,\n            playerIsOnline: playerIsOnline,\n            onCloseChat: onCloseChat\n          }) // </div>\n\n        );\n      }));\n    }\n\n    return render;\n  }();\n\n  return SocialExposure;\n}(React.Component);","map":{"version":3,"sources":["client/game/SocialExposure.jsx"],"names":["_createSuper","module","link","default","v","_inheritsLoose","export","SocialExposure","React","Chat","ChatContainer","Message","Footer","TimeSync","moment","Slider","audio","Audio","logIncomingMessage","msgs","customKey","props","game","round","stage","player","messages","get","mostRecentMsg","length","console","log","sender","_id","append","verb","subjectId","id","object","at","serverTime","activeChats","includes","play","renderSocialInteraction","otherPlayer","value","render","onCloseChat","network","timeStamp","Date","map","otherNodeId","pairOfPlayers","parseInt","sort","p1","p2","players","find","p","otherPlayerId","playerIsOnline","online","chatKey","Component"],"mappings":"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","sourcesContent":["import \"../chat/style.less\";\n\nimport React from \"react\";\nimport { Chat } from \"@empirica/chat\";\nimport ChatContainer from \"../chat/ChatContainer.js\";\nimport  Message  from \"../chat/Message.js\";\nimport Footer from \"../chat/Footer.js\";\nimport { TimeSync } from \"meteor/mizzao:timesync\";\nimport moment from \"moment\";\nimport Slider from \"meteor/empirica:slider\";\n\n\nexport default class SocialExposure extends React.Component {\n  renderSocialInteraction(otherPlayer) {\n    const value = otherPlayer.round.get(\"value\");\n    return (\n      <div className=\"alter\" key={otherPlayer._id}>\n        <img src={otherPlayer.get(\"avatar\")} className=\"profile-avatar\" />\n        <div className=\"range\">\n          <Slider\n            min={0}\n            max={1}\n            stepSize={0.01}\n            value={value}\n            disabled\n            hideHandleOnEmpty\n          />\n        </div>\n      </div>\n    );\n  }\n\n  audio = new Audio(`sounds/notification-sound-7062.mp3`);\n\n\n  logIncomingMessage = (msgs, customKey) => {\n    const {game, round, stage, player} = this.props;\n\n    const messages = round.get(`${customKey}`)\n    const mostRecentMsg = messages[messages.length -1];\n    console.log(mostRecentMsg);\n    const sender = mostRecentMsg.player._id;\n\n    // TODO: Check if this only appends if player chat is open\n    // onIncomingMessage logs the message for both sender and receiver\n    // Only log one copy of the message\n    if (player._id === sender) {\n      stage.append(\"log\", {\n        verb: \"messageLog\",\n        subjectId: player.id,\n        object: mostRecentMsg,\n        at: moment(TimeSync.serverTime(null, 1000)),\n      })\n    }\n\n    if (player._id !== sender) {\n      console.log(\"Received\");\n      console.log(\"Message pending\");\n      const activeChats = player.get(\"activeChats\");\n      if (activeChats.includes())\n\n      this.audio.play();\n\n    }\n  }\n\n  render() {\n    const { game, round, player, onCloseChat, activeChats } = this.props;\n\n    const network = player.get(\"neighbors\");\n    // reactive time value only updates at 1000 ms\n    const timeStamp = new Date(TimeSync.serverTime(null, 1000));\n\n    if (network.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"all-chats-container\">\n        {/* <p>\n          <strong>There are {network.length} other players:</strong>\n        </p> */}\n        {/* {otherPlayers.map(p => this.renderSocialInteraction(p))} */}\n        {/* <Chat player={player} scope={round} /> */}\n\n        {network.map(otherNodeId => {\n          var pairOfPlayers = [player.get(\"nodeId\"), parseInt(otherNodeId)];\n          pairOfPlayers.sort((p1,p2) => p1 - p2);\n          const otherPlayer = game.players.find(p => p.get(\"nodeId\") === parseInt(otherNodeId));\n          const otherPlayerId = otherPlayer.id;\n          const playerIsOnline = otherPlayer.online === true && !otherPlayer.get(\"inactive\");\n          const chatKey = `${pairOfPlayers[0]}-${pairOfPlayers[1]}`;\n\n          return (\n            // <div style={{height: \"80%\"}}>\n              <ChatContainer\n                docked={true}\n                key={otherNodeId}\n                player={player}\n                otherPlayer={otherPlayerId}\n                scope={round}  \n                timeStamp={timeStamp}\n                customClassName={\"ray-chat-container\"}\n                message={Message}\n                footer={Footer}\n                onIncomingMessage={this.logIncomingMessage}           \n                customKey={chatKey}\n                // isActive={activeChats.includes(chatKey)}\n                isActive={true}\n                playerIsOnline={playerIsOnline}\n                onCloseChat={onCloseChat}\n              />\n              // </div>\n            )\n          }\n        )}\n\n\n\n\n      </div>\n    );\n  }\n}\n"]},"sourceType":"module","hash":"81bef33228d7449e62da2d0807241599675bf72d"}
