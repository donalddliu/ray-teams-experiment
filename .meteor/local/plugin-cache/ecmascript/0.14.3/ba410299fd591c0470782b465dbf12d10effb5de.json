{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/donaldliu/Documents/ray-experiment/client/game/Round.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/game/Round.jsx","filename":"/Users/donaldliu/Documents/ray-experiment/client/game/Round.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/donaldliu/Documents/ray-experiment","root":"/Users/donaldliu/Documents/ray-experiment","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/donaldliu/Documents/ray-experiment/client/game/Round.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/game/Round.jsx"}},"code":"var _extends;\n\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default: function (v) {\n    _extends = v;\n  }\n}, 0);\n\nvar _createSuper;\n\nmodule.link(\"@babel/runtime/helpers/createSuper\", {\n  default: function (v) {\n    _createSuper = v;\n  }\n}, 1);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 2);\nmodule.export({\n  \"default\": function () {\n    return Round;\n  }\n});\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar PlayerProfile;\nmodule.link(\"./PlayerProfile.jsx\", {\n  \"default\": function (v) {\n    PlayerProfile = v;\n  }\n}, 1);\nvar SocialExposure;\nmodule.link(\"./SocialExposure.jsx\", {\n  \"default\": function (v) {\n    SocialExposure = v;\n  }\n}, 2);\nvar MyNetwork;\nmodule.link(\"./MyNetwork.jsx\", {\n  \"default\": function (v) {\n    MyNetwork = v;\n  }\n}, 3);\nvar RoundMetaData;\nmodule.link(\"./RoundMetaData.jsx\", {\n  \"default\": function (v) {\n    RoundMetaData = v;\n  }\n}, 4);\nvar Results;\nmodule.link(\"./Results.jsx\", {\n  \"default\": function (v) {\n    Results = v;\n  }\n}, 5);\nvar Task;\nmodule.link(\"./Task.jsx\", {\n  \"default\": function (v) {\n    Task = v;\n  }\n}, 6);\nvar MidSurveyOne;\nmodule.link(\"./mid-survey/MidSurvey1\", {\n  \"default\": function (v) {\n    MidSurveyOne = v;\n  }\n}, 7);\nvar MidSurveyTwo;\nmodule.link(\"./mid-survey/MidSurvey2\", {\n  \"default\": function (v) {\n    MidSurveyTwo = v;\n  }\n}, 8);\nvar MidSurveyThree;\nmodule.link(\"./mid-survey/MidSurvey3\", {\n  \"default\": function (v) {\n    MidSurveyThree = v;\n  }\n}, 9);\nvar MidSurveyFour;\nmodule.link(\"./mid-survey/MidSurvey4\", {\n  \"default\": function (v) {\n    MidSurveyFour = v;\n  }\n}, 10);\nvar MidSurveyFive;\nmodule.link(\"./mid-survey/MidSurvey5\", {\n  \"default\": function (v) {\n    MidSurveyFive = v;\n  }\n}, 11);\nvar InactiveTimer;\nmodule.link(\"./InactiveTimer.jsx\", {\n  \"default\": function (v) {\n    InactiveTimer = v;\n  }\n}, 12);\nvar Modal;\nmodule.link(\"./Modal\", {\n  \"default\": function (v) {\n    Modal = v;\n  }\n}, 13);\nvar TimeSync;\nmodule.link(\"meteor/mizzao:timesync\", {\n  TimeSync: function (v) {\n    TimeSync = v;\n  }\n}, 14);\nvar moment;\nmodule.link(\"moment\", {\n  \"default\": function (v) {\n    moment = v;\n  }\n}, 15);\n\nvar Round = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Round, _React$Component);\n\n  var _super = _createSuper(Round);\n\n  function Round(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this.onOpenModal = function () {\n      _this.setState({\n        modalIsOpen: true\n      });\n    };\n\n    _this.onCloseModal = function () {\n      var player = _this.props.player;\n\n      _this.setState({\n        modalIsOpen: false\n      });\n\n      player.set(\"lastActive\", moment(TimeSync.serverTime(null, 1000)));\n    };\n\n    _this.onOpenChat = function (otherPlayerNodeId) {\n      var player = _this.props.player;\n      var pairOfPlayers = [player.get(\"nodeId\"), parseInt(otherPlayerNodeId)];\n      pairOfPlayers.sort(function (p1, p2) {\n        return p1 - p2;\n      });\n      var customKey = pairOfPlayers[0] + \"-\" + pairOfPlayers[1];\n      console.log(_this.state);\n      console.log(_this.state.activeChats);\n\n      if (!_this.state.activeChats.includes(customKey)) {\n        _this.state.activeChats.push(customKey);\n      }\n\n      console.log(_this.state);\n    };\n\n    _this.onCloseChat = function (customKey) {\n      var newActiveChats = _this.state.activeChats.filter(function (chat) {\n        return chat !== customKey;\n      });\n\n      _this.setState({\n        activeChats: newActiveChats\n      });\n\n      console.log(_this.state);\n    };\n\n    _this.onNext = function () {\n      var player = _this.props.player;\n      var curSurveyNumber = player.get(\"surveyNumber\");\n      player.set(\"surveyNumber\", curSurveyNumber + 1);\n    };\n\n    _this.renderSurvey = function () {\n      var _this$props = _this.props,\n          game = _this$props.game,\n          player = _this$props.player;\n      var submitted = player.get(\"submitted\");\n\n      if (submitted) {\n        return _this.renderSubmitted();\n      }\n\n      var surveyNumber = player.get(\"surveyNumber\");\n\n      if (surveyNumber === 1) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MidSurveyOne, _extends({}, _this.props, {\n          onNext: _this.onNext\n        })), /*#__PURE__*/React.createElement(InactiveTimer, {\n          game: game,\n          player: player\n        }));\n      } else if (surveyNumber === 2) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MidSurveyTwo, _extends({}, _this.props, {\n          onNext: _this.onNext\n        })), /*#__PURE__*/React.createElement(InactiveTimer, {\n          game: game,\n          player: player\n        }));\n      } else if (surveyNumber === 3) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MidSurveyThree, _extends({}, _this.props, {\n          onNext: _this.onNext\n        })), /*#__PURE__*/React.createElement(InactiveTimer, {\n          game: game,\n          player: player\n        }));\n      } else if (surveyNumber === 4) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MidSurveyFpir, _extends({}, _this.props, {\n          onNext: _this.onNext\n        })), /*#__PURE__*/React.createElement(InactiveTimer, {\n          game: game,\n          player: player\n        }));\n      } else if (surveyNumber === 5) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MidSurveyTwo, _extends({}, _this.props, {\n          onNext: _this.onNext\n        })), /*#__PURE__*/React.createElement(InactiveTimer, {\n          game: game,\n          player: player\n        }));\n      }\n    };\n\n    _this.state = {\n      activeChats: [],\n      modalIsOpen: false\n    };\n    return _this;\n  }\n\n  var _proto = Round.prototype;\n\n  _proto.componentDidMount = function () {\n    function componentDidMount() {\n      var player = this.props.player; // Set the player's first activity at the start of the round\n\n      player.set(\"lastActive\", moment(TimeSync.serverTime(null, 1000)));\n    }\n\n    return componentDidMount;\n  }();\n\n  _proto.renderSubmitted = function () {\n    function renderSubmitted() {\n      var _this$props2 = this.props,\n          stage = _this$props2.stage,\n          round = _this$props2.round,\n          player = _this$props2.player,\n          game = _this$props2.game; // Create a list of dots to show how many players submitted\n      // const completedWidth = 590/game.players.length * round.get(\"numPlayersSubmitted\");\n      // const uncompletedWidth = 590 - completedWidth;\n\n      var windowOffset = 75;\n      var completedWidth = window.innerWidth / game.players.length * round.get(\"numPlayersSubmitted\");\n      var uncompletedWidth = window.innerWidth - completedWidth;\n      completedWidth -= windowOffset;\n      uncompletedWidth -= windowOffset;\n\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"completed-bar\"\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"images/hr-color.png\",\n        width: completedWidth + \" px\",\n        height: \"7px\"\n      }));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"survey-wait-container\"\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"survey-wait-static-image\",\n        src: \"images/title-please-hold.png\"\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"survey-wait-content\"\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"results-text\"\n      }, \"Waiting for all members \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"progress-bar\"\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"images/hr-color.png\",\n        width: completedWidth + \" px\",\n        height: \"3px\"\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        src: \"images/hr-white.png\",\n        width: uncompletedWidth + \" px\",\n        height: \"3px\"\n      }))));\n    }\n\n    return renderSubmitted;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          stage = _this$props3.stage,\n          round = _this$props3.round,\n          player = _this$props3.player,\n          game = _this$props3.game; // Create a list of dots to show how many players submitted\n\n      var playersSubmitted = round.get(\"numPlayersSubmitted\");\n      var playersNotSubmitted = game.players.length - playersSubmitted;\n      var filledDots = [];\n      var unfilledDots = [];\n\n      for (var i = 0; i < playersSubmitted; i++) {\n        filledDots.push( /*#__PURE__*/React.createElement(\"span\", {\n          className: \"filled-dot\"\n        }));\n      }\n\n      for (var _i = 0; _i < playersNotSubmitted; _i++) {\n        unfilledDots.push( /*#__PURE__*/React.createElement(\"span\", {\n          className: \"empty-dot\"\n        }));\n      }\n\n      if (stage.name === \"Result\") {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"round\"\n        }, /*#__PURE__*/React.createElement(Results, {\n          game: game,\n          round: round,\n          stage: stage\n        }));\n      } else if (stage.name === \"Survey\") {\n        return this.renderSurvey();\n      } else {\n        // Load the round\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"round\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"content\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"round-task-container\"\n        }, /*#__PURE__*/React.createElement(RoundMetaData, {\n          game: game,\n          round: round,\n          stage: stage,\n          player: player\n        }), /*#__PURE__*/React.createElement(Task, {\n          game: game,\n          round: round,\n          stage: stage,\n          player: player\n        })), /*#__PURE__*/React.createElement(SocialExposure, {\n          game: game,\n          round: round,\n          stage: stage,\n          player: player,\n          onCloseChat: function (customKey) {\n            return _this2.onCloseChat(customKey);\n          },\n          activeChats: this.state.activeChats\n        })));\n      }\n    }\n\n    return render;\n  }();\n\n  return Round;\n}(React.Component);","map":{"version":3,"sources":["client/game/Round.jsx"],"names":["_extends","module","link","default","v","_createSuper","_inheritsLoose","export","Round","React","PlayerProfile","SocialExposure","MyNetwork","RoundMetaData","Results","Task","MidSurveyOne","MidSurveyTwo","MidSurveyThree","MidSurveyFour","MidSurveyFive","InactiveTimer","Modal","TimeSync","moment","props","onOpenModal","setState","modalIsOpen","onCloseModal","player","set","serverTime","onOpenChat","otherPlayerNodeId","pairOfPlayers","get","parseInt","sort","p1","p2","customKey","console","log","state","activeChats","includes","push","onCloseChat","newActiveChats","filter","chat","onNext","curSurveyNumber","renderSurvey","game","submitted","renderSubmitted","surveyNumber","componentDidMount","stage","round","windowOffset","completedWidth","window","innerWidth","players","length","uncompletedWidth","render","playersSubmitted","playersNotSubmitted","filledDots","unfilledDots","i","name","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport PlayerProfile from \"./PlayerProfile.jsx\";\nimport SocialExposure from \"./SocialExposure.jsx\";\nimport MyNetwork from \"./MyNetwork.jsx\";\nimport RoundMetaData from './RoundMetaData.jsx';\nimport Results from \"./Results.jsx\";\nimport Task from \"./Task.jsx\";\n\nimport MidSurveyOne from \"./mid-survey/MidSurvey1\";\nimport MidSurveyTwo from \"./mid-survey/MidSurvey2\";\nimport MidSurveyThree from \"./mid-survey/MidSurvey3\";\nimport MidSurveyFour from \"./mid-survey/MidSurvey4\";\nimport MidSurveyFive from \"./mid-survey/MidSurvey5\";\n\nimport InactiveTimer from \"./InactiveTimer.jsx\";\nimport Modal from \"./Modal\";\n\nimport { TimeSync } from \"meteor/mizzao:timesync\";\nimport moment from \"moment\";\n\nexport default class Round extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeChats : [],\n      modalIsOpen: false,\n    }\n}\n\n  componentDidMount() {\n    const {player} = this.props;\n    // Set the player's first activity at the start of the round\n    player.set(\"lastActive\", moment(TimeSync.serverTime(null, 1000)));\n  }\n\n  onOpenModal = () => {\n    this.setState({modalIsOpen: true});\n  }\n\n  onCloseModal = () => {\n    const {player} = this.props;\n    this.setState({modalIsOpen: false});\n    player.set(\"lastActive\", moment(TimeSync.serverTime(null, 1000)));\n  }\n\n  onOpenChat = (otherPlayerNodeId) => {\n    const {player} = this.props;\n    var pairOfPlayers = [player.get(\"nodeId\"), parseInt(otherPlayerNodeId)];\n    pairOfPlayers.sort((p1,p2) => p1 - p2);\n    var customKey = `${pairOfPlayers[0]}-${pairOfPlayers[1]}`;\n    console.log(this.state);\n    console.log(this.state.activeChats);\n    if (!this.state.activeChats.includes(customKey)) {\n      this.state.activeChats.push(customKey);\n    }\n\n    console.log(this.state);\n  }\n\n  onCloseChat = (customKey) => {\n    const newActiveChats = this.state.activeChats.filter((chat) => chat !== customKey);\n    this.setState({activeChats : newActiveChats});\n    console.log(this.state);\n  }\n\n  onNext = () => {\n    const { player } = this.props;\n    const curSurveyNumber = player.get(\"surveyNumber\");\n    player.set(\"surveyNumber\", curSurveyNumber + 1);\n  }\n\n  renderSubmitted() {\n    const { stage, round, player, game } = this.props;\n\n    // Create a list of dots to show how many players submitted\n    // const completedWidth = 590/game.players.length * round.get(\"numPlayersSubmitted\");\n    // const uncompletedWidth = 590 - completedWidth;\n\n    const windowOffset = 75;\n    let completedWidth = (window.innerWidth/game.players.length * round.get(\"numPlayersSubmitted\"));\n    let uncompletedWidth = (window.innerWidth - completedWidth);\n\n    completedWidth -= windowOffset;\n    uncompletedWidth -= windowOffset;\n\n    <div className=\"completed-bar\">\n        <img src={`images/hr-color.png`} width={`${completedWidth} px`} height=\"7px\" />\n    </div>\n\n    return (\n      <div className=\"survey-wait-container\">\n        <img className=\"survey-wait-static-image\" src={`images/title-please-hold.png`} />\n        <div className=\"survey-wait-content\">\n          <h1 className=\"results-text\">Waiting for all members </h1>\n          <div className=\"progress-bar\">\n            <img src={`images/hr-color.png`} width={`${completedWidth} px`} height=\"3px\" />\n            <img src={`images/hr-white.png`} width={`${uncompletedWidth} px`} height=\"3px\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderSurvey = () => {\n    const { game, player } = this.props;\n    const submitted = player.get(\"submitted\");\n    if (submitted) {\n      return this.renderSubmitted();\n    }\n\n    const surveyNumber = player.get(\"surveyNumber\");\n    if (surveyNumber === 1) {\n      return (\n      <>\n        <MidSurveyOne {...this.props} onNext={this.onNext}/>\n        <InactiveTimer game={game} player={player} />\n      </>\n      )\n    } else if (surveyNumber === 2) {\n      return (\n      <>\n        <MidSurveyTwo {...this.props} onNext={this.onNext}/>\n        <InactiveTimer game={game} player={player} />\n      </>\n      )\n    } else if (surveyNumber === 3) {\n      return (\n        <>\n          <MidSurveyThree {...this.props} onNext={this.onNext}/>\n          <InactiveTimer game={game} player={player} />\n        </>\n        )    } else if (surveyNumber === 4) {\n          return (\n            <>\n              <MidSurveyFpir {...this.props} onNext={this.onNext}/>\n              <InactiveTimer game={game} player={player} />\n            </>\n            )    } else if (surveyNumber === 5) {\n              return (\n                <>\n                  <MidSurveyTwo {...this.props} onNext={this.onNext}/>\n                  <InactiveTimer game={game} player={player} />\n                </>\n                )    }\n  }\n\n  render() {\n    const { stage, round, player, game } = this.props;\n\n    // Create a list of dots to show how many players submitted\n    const playersSubmitted = round.get(\"numPlayersSubmitted\");\n    const playersNotSubmitted = game.players.length - playersSubmitted;\n    let filledDots = [];\n    let unfilledDots = [];\n    for (let i = 0; i < playersSubmitted; i++) {\n      filledDots.push(<span className=\"filled-dot\"></span>)\n    }\n    for (let i = 0; i < playersNotSubmitted; i++) {\n      unfilledDots.push(<span className=\"empty-dot\"></span>)\n    }\n\n\n    if (stage.name === \"Result\") {\n      return (\n        <div className=\"round\">\n          <Results game={game} round={round} stage={stage}/> \n        </div>\n      )\n    } else if (stage.name === \"Survey\"){\n      return this.renderSurvey()\n\n    } else { // Load the round\n      \n      return (\n        <div className=\"round\">\n          <div className=\"content\">\n            <div className=\"round-task-container\">\n              <RoundMetaData game={game} round={round} stage={stage} player={player} />\n              <Task game={game} round={round} stage={stage} player={player} />\n\n            </div>\n            {/* <PlayerProfile player={player} stage={stage} game={game} /> */}\n              {/* <MyNetwork game={game} round={round} stage={stage} player={player} onOpenChat={(otherPlayerNodeId) => this.onOpenChat(otherPlayerNodeId)}/> */}\n              {/* <button onClick={this.onOpenModal}> Open Modal </button>\n              {this.state.modalIsOpen && <Modal player={player} onCloseModal={this.onCloseModal} />} */}\n            <SocialExposure game={game} round={round} stage={stage} player={player} onCloseChat={(customKey) => this.onCloseChat(customKey)} activeChats={this.state.activeChats} />\n            {/* <Timer stage={stage} /> */}\n          </div>\n        </div>\n      );\n    }\n  } \n}\n"]},"sourceType":"module","hash":"ba410299fd591c0470782b465dbf12d10effb5de"}
