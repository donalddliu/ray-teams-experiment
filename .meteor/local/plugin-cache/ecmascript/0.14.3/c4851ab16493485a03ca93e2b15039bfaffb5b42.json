{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/donaldliu/Documents/ray-experiment/client/game/RoundMetaData.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/game/RoundMetaData.jsx","filename":"/Users/donaldliu/Documents/ray-experiment/client/game/RoundMetaData.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/donaldliu/Documents/ray-experiment","root":"/Users/donaldliu/Documents/ray-experiment","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/donaldliu/Documents/ray-experiment/client/game/RoundMetaData.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/game/RoundMetaData.jsx"}},"code":"module.export({\n  default: () => RoundMetaData\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Timer;\nmodule.link(\"./Timer.jsx\", {\n  default(v) {\n    Timer = v;\n  }\n\n}, 1);\nlet InactiveTimer;\nmodule.link(\"./InactiveTimer\", {\n  default(v) {\n    InactiveTimer = v;\n  }\n\n}, 2);\n\nclass RoundMetaData extends React.Component {\n  render() {\n    const {\n      game,\n      round,\n      stage,\n      player\n    } = this.props;\n    const playerId = player.id;\n    const taskName = stage.displayName;\n    const totalTaskRounds = game.treatment.numTaskRounds; // const allSymbols = [];\n    // game.players.forEach(player => {\n    //     const taskSymbols = \n    // })\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metadata-container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"round-number-container\"\n    }, taskName, \" of \", totalTaskRounds), /*#__PURE__*/React.createElement(\"div\", null), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      }\n    }, /*#__PURE__*/React.createElement(Timer, {\n      stage: stage\n    }), /*#__PURE__*/React.createElement(InactiveTimer, {\n      game: game,\n      player: player\n    })));\n  }\n\n}","map":{"version":3,"sources":["client/game/RoundMetaData.jsx"],"names":["module","export","default","RoundMetaData","React","link","v","Timer","InactiveTimer","Component","render","game","round","stage","player","props","playerId","id","taskName","displayName","totalTaskRounds","treatment","numTaskRounds","display","flexDirection"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,OAAO,EAAC,MAAIC;AAAb,CAAd;AAA2C,IAAIC,KAAJ;AAAUJ,MAAM,CAACK,IAAP,CAAY,OAAZ,EAAoB;AAACH,EAAAA,OAAO,CAACI,CAAD,EAAG;AAACF,IAAAA,KAAK,GAACE,CAAN;AAAQ;;AAApB,CAApB,EAA0C,CAA1C;AAA6C,IAAIC,KAAJ;AAAUP,MAAM,CAACK,IAAP,CAAY,aAAZ,EAA0B;AAACH,EAAAA,OAAO,CAACI,CAAD,EAAG;AAACC,IAAAA,KAAK,GAACD,CAAN;AAAQ;;AAApB,CAA1B,EAAgD,CAAhD;AAAmD,IAAIE,aAAJ;AAAkBR,MAAM,CAACK,IAAP,CAAY,iBAAZ,EAA8B;AAACH,EAAAA,OAAO,CAACI,CAAD,EAAG;AAACE,IAAAA,aAAa,GAACF,CAAd;AAAgB;;AAA5B,CAA9B,EAA4D,CAA5D;;AAKlK,MAAMH,aAAN,SAA4BC,KAAK,CAACK,SAAlC,CAA4C;AAEvDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA,KAAP;AAAcC,MAAAA,KAAd;AAAqBC,MAAAA;AAArB,QAA+B,KAAKC,KAA1C;AAEA,UAAMC,QAAQ,GAAGF,MAAM,CAACG,EAAxB;AACA,UAAMC,QAAQ,GAAGL,KAAK,CAACM,WAAvB;AACA,UAAMC,eAAe,GAAGT,IAAI,CAACU,SAAL,CAAeC,aAAvC,CALK,CAOL;AACA;AACA;AACA;;AAGA,wBACI;AAAK,MAAA,SAAS,EAAC;AAAf,oBAUI;AAAK,MAAA,SAAS,EAAC;AAAf,OACKJ,QADL,UACmBE,eADnB,CAVJ,eAaI,gCAbJ,eAcI;AAAK,MAAA,KAAK,EAAE;AAACG,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,aAAa,EAAC;AAAhC;AAAZ,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEX;AAAd,MADJ,eAEI,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAEF,IAArB;AAA2B,MAAA,MAAM,EAAEG;AAAnC,MAFJ,CAdJ,CADJ;AAqBH;;AApCsD","sourcesContent":["import React from 'react';\nimport Timer from \"./Timer.jsx\";\n\nimport InactiveTimer from './InactiveTimer';\n\nexport default class RoundMetaData extends React.Component {\n\n    render() {\n        const {game, round, stage, player} = this.props; \n\n        const playerId = player.id;\n        const taskName = stage.displayName;\n        const totalTaskRounds = game.treatment.numTaskRounds;\n\n        // const allSymbols = [];\n        // game.players.forEach(player => {\n        //     const taskSymbols = \n        // })\n\n        \n        return(\n            <div className=\"metadata-container\">\n                {/* <div className=\"player-avatar-container\">\n                    {player.get(\"avatar\") ? \n                    <img src={player.get(\"avatar\")} width=\"100px\" height=\"100px\"/> : \n                    <img src={`images/icon-profile-white.png`} width=\"100px\" height=\"100px\" />\n                    }\n                </div>\n                <div className=\"player-name-container\">\n                    {playerId}\n                </div> */}\n                <div className=\"round-number-container\">\n                    {taskName} of {totalTaskRounds}\n                </div>\n                <div></div>\n                <div style={{display: \"flex\", flexDirection:\"column\"}}>\n                    <Timer stage={stage}/>\n                    <InactiveTimer game={game} player={player} />\n                </div>\n            </div>\n        )\n    }\n}\n"]},"sourceType":"module","hash":"c4851ab16493485a03ca93e2b15039bfaffb5b42"}
