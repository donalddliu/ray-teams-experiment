{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/donaldliu/Documents/ray-experiment/client/game/Round.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/game/Round.jsx","filename":"/Users/donaldliu/Documents/ray-experiment/client/game/Round.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/donaldliu/Documents/ray-experiment","root":"/Users/donaldliu/Documents/ray-experiment","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/donaldliu/Documents/ray-experiment/client/game/Round.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/game/Round.jsx"}},"code":"module.export({\n  default: () => Round\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PlayerProfile;\nmodule.link(\"./PlayerProfile.jsx\", {\n  default(v) {\n    PlayerProfile = v;\n  }\n\n}, 1);\nlet SocialExposure;\nmodule.link(\"./SocialExposure.jsx\", {\n  default(v) {\n    SocialExposure = v;\n  }\n\n}, 2);\nlet MyNetwork;\nmodule.link(\"./MyNetwork.jsx\", {\n  default(v) {\n    MyNetwork = v;\n  }\n\n}, 3);\nlet Results;\nmodule.link(\"./Results.jsx\", {\n  default(v) {\n    Results = v;\n  }\n\n}, 4);\nlet Task;\nmodule.link(\"./Task.jsx\", {\n  default(v) {\n    Task = v;\n  }\n\n}, 5);\nlet Timer;\nmodule.link(\"./Timer.jsx\", {\n  default(v) {\n    Timer = v;\n  }\n\n}, 6);\nlet MidSurveyOne;\nmodule.link(\"./mid-survey/MidSurvey1\", {\n  default(v) {\n    MidSurveyOne = v;\n  }\n\n}, 7);\nlet MidSurveyTwo;\nmodule.link(\"./mid-survey/MidSurvey2\", {\n  default(v) {\n    MidSurveyTwo = v;\n  }\n\n}, 8);\nlet MidSurveyThree;\nmodule.link(\"./mid-survey/MidSurvey3\", {\n  default(v) {\n    MidSurveyThree = v;\n  }\n\n}, 9);\nlet MidSurveyFour;\nmodule.link(\"./mid-survey/MidSurvey4\", {\n  default(v) {\n    MidSurveyFour = v;\n  }\n\n}, 10);\nlet MidSurveyFive;\nmodule.link(\"./mid-survey/MidSurvey5\", {\n  default(v) {\n    MidSurveyFive = v;\n  }\n\n}, 11);\n\nclass Round extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onOpenChat = otherPlayerNodeId => {\n      const {\n        player\n      } = this.props;\n      var pairOfPlayers = [player.get(\"nodeId\"), parseInt(otherPlayerNodeId)];\n      pairOfPlayers.sort((p1, p2) => p1 - p2);\n      var customKey = \"\".concat(pairOfPlayers[0], \"-\").concat(pairOfPlayers[1]);\n      console.log(this.state);\n      console.log(this.state.activeChats);\n\n      if (!this.state.activeChats.includes(customKey)) {\n        this.state.activeChats.push(customKey);\n      }\n\n      console.log(this.state);\n    };\n\n    this.onCloseChat = customKey => {\n      const newActiveChats = this.state.activeChats.filter(chat => chat !== customKey);\n      this.setState({\n        activeChats: newActiveChats\n      });\n      console.log(this.state);\n    };\n\n    this.onNext = () => {\n      const currentSurveyNum = player.get(\"survey\");\n    };\n\n    this.renderSurvey = () => {\n      const {\n        stage\n      } = this.props;\n\n      if (stage.name === \"Survey1\") {\n        return /*#__PURE__*/React.createElement(MidSurveyOne, null);\n      } else if (stage.name === \"Survey2\") {\n        return /*#__PURE__*/React.createElement(MidSurveyTwo, null);\n      } else if (stage.name === \"Survey3\") {\n        return /*#__PURE__*/React.createElement(MidSurveyThree, null);\n      } else if (stage.name === \"Survey4\") {\n        return /*#__PURE__*/React.createElement(MidSurveyFour, null);\n      } else if (stage.name === \"Survey5\") {\n        return /*#__PURE__*/React.createElement(MidSurveyFive, null);\n      }\n    };\n\n    this.state = {\n      activeChats: []\n    };\n  }\n\n  render() {\n    const {\n      stage,\n      round,\n      player,\n      game\n    } = this.props; // const showResults = stage.get(\"showResults\");\n    // if (showResults) {\n    //   const result = stage.get(\"result\")\n    //   return (\n    //   <div>\n    //     <StageResult stage={stage} showResults={showResults} result={result} timer={10}/>\n    //   </div>\n    //   )\n    // }\n\n    if (stage.name === \"Result\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"round\"\n      }, /*#__PURE__*/React.createElement(Results, {\n        game: game,\n        round: round,\n        stage: stage\n      }), /*#__PURE__*/React.createElement(Timer, {\n        stage: stage\n      }));\n    } else if (stage.name.includes(\"Survey\")) {\n      const surveyNumber = player.get(\"surveyNumber\");\n\n      if (stage.name === \"Survey_1\") {\n        return /*#__PURE__*/React.createElement(MidSurveyOne, this.props);\n      } else if (stage.name === \"Survey_2\") {\n        return /*#__PURE__*/React.createElement(MidSurveyTwo, this.props);\n      } else if (stage.name === \"Survey_3\") {\n        return /*#__PURE__*/React.createElement(MidSurveyThree, this.props);\n      } else if (stage.name === \"Survey_4\") {\n        return /*#__PURE__*/React.createElement(MidSurveyFour, this.props);\n      } else if (stage.name === \"Survey_5\") {\n        return /*#__PURE__*/React.createElement(MidSurveyFive, this.props);\n      }\n    } else {\n      // Load the round\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"round\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"task-network-container\"\n      }, /*#__PURE__*/React.createElement(Task, {\n        game: game,\n        round: round,\n        stage: stage,\n        player: player\n      }), /*#__PURE__*/React.createElement(MyNetwork, {\n        game: game,\n        round: round,\n        stage: stage,\n        player: player,\n        onOpenChat: otherPlayerNodeId => this.onOpenChat(otherPlayerNodeId)\n      })), /*#__PURE__*/React.createElement(SocialExposure, {\n        game: game,\n        round: round,\n        stage: stage,\n        player: player,\n        onCloseChat: customKey => this.onCloseChat(customKey),\n        activeChats: this.state.activeChats\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["client/game/Round.jsx"],"names":["module","export","default","Round","React","link","v","PlayerProfile","SocialExposure","MyNetwork","Results","Task","Timer","MidSurveyOne","MidSurveyTwo","MidSurveyThree","MidSurveyFour","MidSurveyFive","Component","constructor","props","onOpenChat","otherPlayerNodeId","player","pairOfPlayers","get","parseInt","sort","p1","p2","customKey","console","log","state","activeChats","includes","push","onCloseChat","newActiveChats","filter","chat","setState","onNext","currentSurveyNum","renderSurvey","stage","name","render","round","game","surveyNumber"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport PlayerProfile from \"./PlayerProfile.jsx\";\nimport SocialExposure from \"./SocialExposure.jsx\";\nimport MyNetwork from \"./MyNetwork.jsx\";\nimport Results from \"./Results.jsx\";\nimport Task from \"./Task.jsx\";\nimport Timer from \"./Timer.jsx\";\n\nimport MidSurveyOne from \"./mid-survey/MidSurvey1\";\nimport MidSurveyTwo from \"./mid-survey/MidSurvey2\";\nimport MidSurveyThree from \"./mid-survey/MidSurvey3\";\nimport MidSurveyFour from \"./mid-survey/MidSurvey4\";\nimport MidSurveyFive from \"./mid-survey/MidSurvey5\";\n\nexport default class Round extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeChats : [],\n    }\n}\n\n  onOpenChat = (otherPlayerNodeId) => {\n    const {player} = this.props;\n    var pairOfPlayers = [player.get(\"nodeId\"), parseInt(otherPlayerNodeId)];\n    pairOfPlayers.sort((p1,p2) => p1 - p2);\n    var customKey = `${pairOfPlayers[0]}-${pairOfPlayers[1]}`;\n    console.log(this.state);\n    console.log(this.state.activeChats);\n    if (!this.state.activeChats.includes(customKey)) {\n      this.state.activeChats.push(customKey);\n    }\n\n    console.log(this.state);\n  }\n\n  onCloseChat = (customKey) => {\n    const newActiveChats = this.state.activeChats.filter((chat) => chat !== customKey);\n    this.setState({activeChats : newActiveChats});\n    console.log(this.state);\n  }\n\n  onNext = () => {\n    const currentSurveyNum = player.get(\"survey\")\n  }\n\n  renderSurvey = () => {\n    const {stage} = this.props;\n    if (stage.name === \"Survey1\") {\n      return (<MidSurveyOne />)\n    } else if (stage.name === \"Survey2\") {\n      return (<MidSurveyTwo />)\n    } else if (stage.name === \"Survey3\") {\n      return (<MidSurveyThree />)\n    } else if (stage.name === \"Survey4\") {\n      return (<MidSurveyFour />)\n    } else if (stage.name === \"Survey5\") {\n      return (<MidSurveyFive />)\n    }\n  }\n\n  render() {\n    const { stage, round, player, game } = this.props;\n    // const showResults = stage.get(\"showResults\");\n\n    // if (showResults) {\n    //   const result = stage.get(\"result\")\n    //   return (\n    //   <div>\n    //     <StageResult stage={stage} showResults={showResults} result={result} timer={10}/>\n    //   </div>\n    //   )\n    // }\n\n    if (stage.name === \"Result\") {\n      return (\n        <div className=\"round\">\n          <Results game={game} round={round} stage={stage}/> \n          <Timer stage={stage}/>\n        </div>\n      )\n    } else if (stage.name.includes(\"Survey\")){\n      const surveyNumber = player.get(\"surveyNumber\")\n      if (stage.name === \"Survey_1\") {\n        return <MidSurveyOne {...this.props}/>\n      } else if (stage.name === \"Survey_2\") {\n        return <MidSurveyTwo {...this.props}/>\n      } else if (stage.name === \"Survey_3\") {\n        return <MidSurveyThree {...this.props}/>\n      } else if (stage.name === \"Survey_4\") {\n        return <MidSurveyFour {...this.props}/>\n      } else if (stage.name === \"Survey_5\") {\n        return <MidSurveyFive {...this.props}/>\n      }\n\n    } else { // Load the round\n      \n      return (\n        <div className=\"round\">\n          <div className=\"content\">\n            {/* <PlayerProfile player={player} stage={stage} game={game} /> */}\n            <div className=\"task-network-container\">\n              <Task game={game} round={round} stage={stage} player={player} />\n              <MyNetwork game={game} round={round} stage={stage} player={player} onOpenChat={(otherPlayerNodeId) => this.onOpenChat(otherPlayerNodeId)}/>\n            </div>\n            <SocialExposure game={game} round={round} stage={stage} player={player} onCloseChat={(customKey) => this.onCloseChat(customKey)} activeChats={this.state.activeChats} />\n            {/* <Timer stage={stage} /> */}\n          </div>\n        </div>\n      );\n    }\n  } \n}\n"]},"sourceType":"module","hash":"83ea49b7bcd0d65e2f2eb0bea9bdd72d73a8d213"}
