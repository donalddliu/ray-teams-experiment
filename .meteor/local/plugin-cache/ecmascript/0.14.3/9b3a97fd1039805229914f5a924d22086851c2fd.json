{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/donaldliu/Documents/ray-experiment/client/intro/quiz/AllQuiz.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/intro/quiz/AllQuiz.jsx","filename":"/Users/donaldliu/Documents/ray-experiment/client/intro/quiz/AllQuiz.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/donaldliu/Documents/ray-experiment","root":"/Users/donaldliu/Documents/ray-experiment","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/donaldliu/Documents/ray-experiment/client/intro/quiz/AllQuiz.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/intro/quiz/AllQuiz.jsx"}},"code":"module.export({\n  default: () => AllQuiz\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nmodule.link(\"../../../public/css/intro.css\");\nlet Centered;\nmodule.link(\"meteor/empirica:core\", {\n  Centered(v) {\n    Centered = v;\n  }\n\n}, 1);\nlet AttentionCheckModal;\nmodule.link(\"./AttentionCheckModal\", {\n  default(v) {\n    AttentionCheckModal = v;\n  }\n\n}, 2);\n\nconst Radio = (_ref) => {\n  let {\n    selected,\n    name,\n    value,\n    label,\n    onChange\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"label\", {\n    className: \"questionnaire-radio\"\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"quiz-button\",\n    type: \"radio\",\n    name: name,\n    value: value,\n    checked: selected === value,\n    onChange: onChange\n  }), label);\n};\n\nclass AllQuiz extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      q1: \"\",\n      q2: \"\",\n      q3: \"\",\n      q4: \"\",\n      q5: \"\",\n      q6: \"\",\n      q7: \"\",\n      q8: \"\"\n    };\n\n    this.handleChange = event => {\n      const el = event.currentTarget;\n      this.setState({\n        [el.name]: el.value\n      });\n    };\n\n    this.allCorrect = () => {\n      return this.state.q1 === 'yes' && this.state.q2 === 'yes' && this.state.q3 === 'yes' && this.state.q4 === 'yes' && this.state.q5 === 'one' && this.state.q6 === 'false' && this.state.q7 === 'false' && this.state.q8 === 'yes';\n    };\n\n    this.handleSubmit = event => {\n      const {\n        hasPrev,\n        hasNext,\n        onNext,\n        onPrev,\n        game,\n        player\n      } = this.props;\n      event.preventDefault();\n\n      if (this.allCorrect()) {\n        onNext();\n      } else {\n        const currentTriesLeft = player.get(\"attentionCheckTries\");\n        player.set(\"attentionCheckTries\", currentTriesLeft - 1);\n        console.log(\"You have \".concat(player.get(\"attentionCheckTries\"), \" tries left.\"));\n\n        if (player.get(\"attentionCheckTries\") === 0) {\n          player.exit(\"failedQuestion\");\n        }\n      }\n    };\n\n    this.onCloseModal = () => {\n      const {\n        player\n      } = this.props;\n      this.setState({\n        modalIsOpen: false\n      });\n      player.set(\"lastActive\", moment(TimeSync.serverTime(null, 1000)));\n    };\n  }\n\n  componentDidMount() {\n    const {\n      player\n    } = this.props;\n\n    if (!player.get(\"attentionCheckTries\")) {\n      console.log(\"Mounted\");\n      player.set(\"attentionCheckTries\", 3);\n    }\n  }\n\n  render() {\n    const {\n      player\n    } = this.props;\n    const {\n      q1,\n      q2,\n      q3,\n      q4,\n      q5,\n      q6,\n      q7,\n      q8\n    } = this.state;\n    const allSelected = Object.keys(this.state).every(key => this.state[key] !== \"\"); // console.log(allSelected);\n\n    return /*#__PURE__*/React.createElement(Centered, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"intro-heading questionnaire-heading\"\n    }, \" Questionnaire \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"questionnaire-content-container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"questionnaire-body\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-section\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"questionnaire-question\"\n    }, \"Are you willing to participate in an online team exercise that could last for approximately 60 minutes?\"), /*#__PURE__*/React.createElement(Radio, {\n      selected: q1,\n      name: \"q1\",\n      value: \"yes\",\n      label: \"Yes\",\n      onChange: this.handleChange\n    }), /*#__PURE__*/React.createElement(Radio, {\n      selected: q1,\n      name: \"q1\",\n      value: \"no\",\n      label: \"No\",\n      onChange: this.handleChange\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-section\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"questionnaire-question\"\n    }, \"If you do not interact with the application for 5 minutes your session will timeout, and the experiment will end for everyone in your team. 1 minute before the timeout you will be notified you are about to timeout, and be given a chance to reset this timer. If you allow your session to timeout your HIT will not be accepted. If a team member causes a timeout you will be sent to the end of challenge page, and your HIT will be accepted.\"), /*#__PURE__*/React.createElement(Radio, {\n      selected: q2,\n      name: \"q2\",\n      value: \"yes\",\n      label: \"PROCEED\",\n      onChange: this.handleChange\n    }), /*#__PURE__*/React.createElement(Radio, {\n      selected: q2,\n      name: \"q2\",\n      value: \"no\",\n      label: \"DO NOT PROCEED\",\n      onChange: this.handleChange\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-section\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"questionnaire-question\"\n    }, \"Next you will be asked questions about the instruction you just read. You need to get the answers correct in order to be accepted into the exercise. \"), /*#__PURE__*/React.createElement(Radio, {\n      selected: q3,\n      name: \"q3\",\n      value: \"yes\",\n      label: \"PROCEED\",\n      onChange: this.handleChange\n    }), /*#__PURE__*/React.createElement(Radio, {\n      selected: q3,\n      name: \"q3\",\n      value: \"no\",\n      label: \"DO NOT PROCEED\",\n      onChange: this.handleChange\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-section\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"questionnaire-question\"\n    }, \"Is the following statement true or false? If any member of my team doesn't register a guess or communicate with a colleague for five minutes, the task will end and the entire 5-person team (including myself) will be sent to the exit page of the survey.\"), /*#__PURE__*/React.createElement(Radio, {\n      selected: q4,\n      name: \"q4\",\n      value: \"yes\",\n      label: \"Yes\",\n      onChange: this.handleChange\n    }), /*#__PURE__*/React.createElement(Radio, {\n      selected: q4,\n      name: \"q4\",\n      value: \"no\",\n      label: \"No\",\n      onChange: this.handleChange\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-section\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"questionnaire-question\"\n    }, \"On any trial, how many abstract symbols will you and any member of your team have in common?\"), /*#__PURE__*/React.createElement(Radio, {\n      selected: q5,\n      name: \"q5\",\n      value: \"one\",\n      label: \"Only 1\",\n      onChange: this.handleChange\n    }), /*#__PURE__*/React.createElement(Radio, {\n      selected: q5,\n      name: \"q5\",\n      value: \"many\",\n      label: \"More than 1\",\n      onChange: this.handleChange\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-section\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"questionnaire-question\"\n    }, \"Is the following statement true or false? I will be able to communicate with my team members using a group chat and I will always be able to communicate with every member of my team.\"), /*#__PURE__*/React.createElement(Radio, {\n      selected: q6,\n      name: \"q6\",\n      value: \"true\",\n      label: \"True\",\n      onChange: this.handleChange\n    }), /*#__PURE__*/React.createElement(Radio, {\n      selected: q6,\n      name: \"q6\",\n      value: \"false\",\n      label: \"False\",\n      onChange: this.handleChange\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-section\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"questionnaire-question\"\n    }, \"The reconsider button will only appear if I submit an incorrect answer.\"), /*#__PURE__*/React.createElement(Radio, {\n      selected: q7,\n      name: \"q7\",\n      value: \"true\",\n      label: \"True\",\n      onChange: this.handleChange\n    }), /*#__PURE__*/React.createElement(Radio, {\n      selected: q7,\n      name: \"q7\",\n      value: \"false\",\n      label: \"False\",\n      onChange: this.handleChange\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-section\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"questionnaire-question\"\n    }, \"You have been selected to participate in the task. You will receive a flat fee of $2 for participating. You will also receive $1 bonus each time your team correctly identifies the shared symbol. If you complete all 15 trials of the experiment, you could earn up to $17.\"), /*#__PURE__*/React.createElement(Radio, {\n      selected: q8,\n      name: \"q8\",\n      value: \"yes\",\n      label: \"PROCEED\",\n      onChange: this.handleChange\n    }), /*#__PURE__*/React.createElement(Radio, {\n      selected: q8,\n      name: \"q8\",\n      value: \"no\",\n      label: \"DO NOT PROCEED\",\n      onChange: this.handleChange\n    }))), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"questionnaire-btn-container\",\n      onSubmit: this.handleSubmit\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: !allSelected ? \"arrow-button button-submit-disabled\" : \"arrow-button button-submit\",\n      disabled: !allSelected,\n      type: \"submit\"\n    }, \" Submit \")), /*#__PURE__*/React.createElement(AttentionCheckModal, {\n      onCloseModal: this.onCloseModal\n    })));\n  }\n\n}","map":{"version":3,"sources":["client/intro/quiz/AllQuiz.jsx"],"names":["module","export","default","AllQuiz","React","link","v","Centered","AttentionCheckModal","Radio","selected","name","value","label","onChange","Component","state","q1","q2","q3","q4","q5","q6","q7","q8","handleChange","event","el","currentTarget","setState","allCorrect","handleSubmit","hasPrev","hasNext","onNext","onPrev","game","player","props","preventDefault","currentTriesLeft","get","set","console","log","exit","onCloseModal","modalIsOpen","moment","TimeSync","serverTime","componentDidMount","render","allSelected","Object","keys","every","key"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport '../../../public/css/intro.css';\n\nimport { Centered } from \"meteor/empirica:core\";\nimport AttentionCheckModal from \"./AttentionCheckModal\";\n\nconst Radio = ({ selected, name, value, label, onChange }) => (\n    <label className=\"questionnaire-radio\">\n        <input\n        className=\"quiz-button\"\n        type=\"radio\"\n        name={name}\n        value={value}\n        checked={selected === value}\n        onChange={onChange}\n        />\n        {label}\n    </label>\n);\n\nexport default class AllQuiz extends React.Component {\n  state = { q1: \"\", q2: \"\", q3: \"\", q4: \"\", q5: \"\", q6: \"\", q7: \"\", q8: \"\"};\n\n  componentDidMount() {\n    const {player} = this.props;\n    if (!player.get(\"attentionCheckTries\")) {\n        console.log(\"Mounted\");\n        player.set(\"attentionCheckTries\", 3);\n    } \n  }\n\n  handleChange = event => {\n    const el = event.currentTarget;\n    this.setState({ [el.name]: el.value });\n  };\n\n  allCorrect = () => {\n      return (\n        this.state.q1 === 'yes' &&\n        this.state.q2 === 'yes' &&\n        this.state.q3 === 'yes' &&\n        this.state.q4 === 'yes' &&\n        this.state.q5 === 'one' &&\n        this.state.q6 === 'false' &&\n        this.state.q7 === 'false' &&\n        this.state.q8 === 'yes'\n      )\n  }\n\n  handleSubmit = event => {\n    const { hasPrev, hasNext, onNext, onPrev, game, player } = this.props;\n    event.preventDefault();\n    if (this.allCorrect()) {\n        onNext();\n    } else {\n        const currentTriesLeft = player.get(\"attentionCheckTries\");\n        player.set(\"attentionCheckTries\", currentTriesLeft-1);\n        console.log(`You have ${player.get(\"attentionCheckTries\")} tries left.`);\n        if (player.get(\"attentionCheckTries\") === 0) {\n            player.exit(\"failedQuestion\");\n        }\n    }\n  };\n\n  onCloseModal = () => {\n    const {player} = this.props;\n    this.setState({modalIsOpen: false});\n    player.set(\"lastActive\", moment(TimeSync.serverTime(null, 1000)));\n  }\n\n  render() {\n    const { player } = this.props;\n    const { q1, q2, q3, q4, q5, q6, q7, q8 } = this.state;\n\n    const allSelected = Object.keys(this.state).every(key => this.state[key] !== \"\")\n    // console.log(allSelected);\n    return (\n      <Centered>\n        <div className=\"intro-heading questionnaire-heading\"> Questionnaire </div>\n            <div className=\"questionnaire-content-container\">\n                <div className=\"questionnaire-body\">\n                    <div className=\"question-section\">\n                        <label className=\"questionnaire-question\">Are you willing to participate in an online team exercise that could last for approximately 60 minutes?</label>\n                        <Radio\n                            selected={q1}\n                            name=\"q1\"\n                            value=\"yes\"\n                            label=\"Yes\"\n                            onChange={this.handleChange}\n                        />\n                        <Radio\n                            selected={q1}\n                            name=\"q1\"\n                            value=\"no\"\n                            label=\"No\"\n                            onChange={this.handleChange}\n                        />\n                    </div>\n\n                    <div className=\"question-section\">\n                    <label className=\"questionnaire-question\">If you do not interact with the application for 5 minutes your session will timeout, and the experiment will end for everyone in your team. 1 minute before the timeout you will be notified you are about to timeout, and be given a chance to reset this timer. If you allow your session to timeout your HIT will not be accepted. If a team member causes a timeout you will be sent to the end of challenge page, and your HIT will be accepted.</label>\n                    <Radio\n                        selected={q2}\n                        name=\"q2\"\n                        value=\"yes\"\n                        label=\"PROCEED\"\n                        onChange={this.handleChange}\n                    />\n                    <Radio\n                        selected={q2}\n                        name=\"q2\"\n                        value=\"no\"\n                        label=\"DO NOT PROCEED\"\n                        onChange={this.handleChange}\n                    />\n                    </div>\n\n                    <div className=\"question-section\">\n                    <label className=\"questionnaire-question\">Next you will be asked questions about the instruction you just read. You need to get the answers correct in order to be accepted into the exercise. </label>\n                    <Radio\n                        selected={q3}\n                        name=\"q3\"\n                        value=\"yes\"\n                        label=\"PROCEED\"\n                        onChange={this.handleChange}\n                    />\n                    <Radio\n                        selected={q3}\n                        name=\"q3\"\n                        value=\"no\"\n                        label=\"DO NOT PROCEED\"\n                        onChange={this.handleChange}\n                    />\n                    </div>\n\n                    <div className=\"question-section\">\n                    <label className=\"questionnaire-question\">Is the following statement true or false? If any member of my team doesn't register a guess or communicate with a colleague for five minutes, the task will end and the entire 5-person team (including myself) will be sent to the exit page of the survey.</label>\n                    <Radio\n                        selected={q4}\n                        name=\"q4\"\n                        value=\"yes\"\n                        label=\"Yes\"\n                        onChange={this.handleChange}\n                    />\n                    <Radio\n                        selected={q4}\n                        name=\"q4\"\n                        value=\"no\"\n                        label=\"No\"\n                        onChange={this.handleChange}\n                    />\n                    </div>\n\n                    <div className=\"question-section\">\n                    <label className=\"questionnaire-question\">On any trial, how many abstract symbols will you and any member of your team have in common?</label>\n                    <Radio\n                        selected={q5}\n                        name=\"q5\"\n                        value=\"one\"\n                        label=\"Only 1\"\n                        onChange={this.handleChange}\n                    />\n                    <Radio\n                        selected={q5}\n                        name=\"q5\"\n                        value=\"many\"\n                        label=\"More than 1\"\n                        onChange={this.handleChange}\n                    />\n                    </div>\n\n                    <div className=\"question-section\">\n                    <label className=\"questionnaire-question\">Is the following statement true or false? I will be able to communicate with my team members using a group chat and I will always be able to communicate with every member of my team.</label>\n                    <Radio\n                        selected={q6}\n                        name=\"q6\"\n                        value=\"true\"\n                        label=\"True\"\n                        onChange={this.handleChange}\n                    />\n                    <Radio\n                        selected={q6}\n                        name=\"q6\"\n                        value=\"false\"\n                        label=\"False\"\n                        onChange={this.handleChange}\n                    />\n                    </div>\n\n                    <div className=\"question-section\">\n                    <label className=\"questionnaire-question\">The reconsider button will only appear if I submit an incorrect answer.</label>\n                    <Radio\n                        selected={q7}\n                        name=\"q7\"\n                        value=\"true\"\n                        label=\"True\"\n                        onChange={this.handleChange}\n                    />\n                    <Radio\n                        selected={q7}\n                        name=\"q7\"\n                        value=\"false\"\n                        label=\"False\"\n                        onChange={this.handleChange}\n                    />\n                    </div>\n\n                    <div className=\"question-section\">  \n                    <label className=\"questionnaire-question\">You have been selected to participate in the task. You will receive a flat fee of $2 for participating. You will also receive $1 bonus each time your team correctly identifies the shared symbol. If you complete all 15 trials of the experiment, you could earn up to $17.</label>\n                    <Radio\n                        selected={q8}\n                        name=\"q8\"\n                        value=\"yes\"\n                        label=\"PROCEED\"\n                        onChange={this.handleChange}\n                    />\n                    <Radio\n                        selected={q8}\n                        name=\"q8\"\n                        value=\"no\"\n                        label=\"DO NOT PROCEED\"\n                        onChange={this.handleChange}\n                    />  \n                    </div>                  \n                </div>\n                <form className=\"questionnaire-btn-container\" onSubmit={this.handleSubmit}>\n                    <button \n                        className={!allSelected ? \"arrow-button button-submit-disabled\" : \"arrow-button button-submit\"}\n                        disabled={!allSelected} type=\"submit\"> Submit </button> \n                </form>\n                <AttentionCheckModal onCloseModal={this.onCloseModal} />\n            </div>\n      </Centered>\n    );\n  }\n}\n"]},"sourceType":"module","hash":"9b3a97fd1039805229914f5a924d22086851c2fd"}
