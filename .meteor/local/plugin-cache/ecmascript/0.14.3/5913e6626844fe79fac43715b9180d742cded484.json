{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/donaldliu/Documents/ray-experiment/client/game/mid-survey/MidSurvey4.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/game/mid-survey/MidSurvey4.jsx","filename":"/Users/donaldliu/Documents/ray-experiment/client/game/mid-survey/MidSurvey4.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/donaldliu/Documents/ray-experiment","root":"/Users/donaldliu/Documents/ray-experiment","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/donaldliu/Documents/ray-experiment/client/game/mid-survey/MidSurvey4.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/game/mid-survey/MidSurvey4.jsx"}},"code":"module.export({\n  default: () => MidSurveyFour\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Slider;\nmodule.link(\"meteor/empirica:slider\", {\n  default(v) {\n    Slider = v;\n  }\n\n}, 1);\nlet Centered;\nmodule.link(\"meteor/empirica:core\", {\n  Centered(v) {\n    Centered = v;\n  }\n\n}, 2);\n\nclass MidSurveyFour extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      sliderValue: 0\n    };\n\n    this.handleSliderChange = num => {\n      const {\n        stage,\n        player\n      } = this.props; // Rounding the number to 2 decimals max\n\n      this.setState({\n        sliderValue: num\n      });\n      player.stage.set(\"sliderValue\", num);\n    };\n\n    this.renderLabels = val => {\n      if (val === 0) {\n        // Min value\n        return \"\".concat(val, \" Poor\");\n      } else if (val === 3) {\n        return \"\".concat(val, \" Neutral\");\n      } else if (val === 6) {\n        // Max value\n        return \"\".concat(val, \" Happy\");\n      }\n\n      return \"\";\n    };\n\n    this.handleSubmit = event => {\n      const {\n        onNext,\n        player\n      } = this.props;\n      event.preventDefault(); // TODO: log player response to survey question\n\n      onNext();\n    };\n  }\n\n  render() {\n    const {\n      game,\n      round,\n      stage,\n      player\n    } = this.props;\n    const {\n      response\n    } = this.state;\n    const surveyNumber = player.get(\"surveyNumber\");\n    const completedWidth = 590 / 5 * surveyNumber;\n    const uncompletedWidth = 590 - completedWidth;\n    const offset = 590 / 5 * 0.5;\n    const stageNumPosition = completedWidth - offset;\n    const sliderValue = this.state.sliderValue;\n    return /*#__PURE__*/React.createElement(Centered, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"intro-heading questionnaire-heading\"\n    }, \" To complete the challenge, please fill in the following questionnaire \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"questionnaire-content-container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"completed-bar\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"completed-heading\",\n      style: {\n        marginLeft: stageNumPosition\n      }\n    }, \" \", surveyNumber, \" \"), /*#__PURE__*/React.createElement(\"img\", {\n      src: \"images/hr-color.png\",\n      width: \"\".concat(completedWidth, \" px\"),\n      height: \"7px\"\n    })), /*#__PURE__*/React.createElement(\"img\", {\n      src: \"images/hr-color-dark.png\",\n      width: \"\".concat(uncompletedWidth, \" px\"),\n      height: \"7px\"\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"questionnaire-body\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"questionnaire-question\"\n    }, \" On the scale below, rate how your team has been working in the recent trials \"), /*#__PURE__*/React.createElement(Slider, {\n      min: 0,\n      max: 6,\n      stepSize: 1,\n      disabled: false,\n      showTrackFill: false,\n      value: sliderValue,\n      labelRenderer: this.renderLabels,\n      onChange: this.handleSliderChange\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slider-value-container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slider-value\"\n    }, sliderValue, \" \"))), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"questionnaire-btn-container\",\n      onSubmit: this.handleSubmit\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"arrow-button button-submit\",\n      type: \"submit\"\n    }, \" Submit \"))));\n  }\n\n}","map":{"version":3,"sources":["client/game/mid-survey/MidSurvey4.jsx"],"names":["module","export","default","MidSurveyFour","React","link","v","Slider","Centered","Component","state","sliderValue","handleSliderChange","num","stage","player","props","setState","set","renderLabels","val","handleSubmit","event","onNext","preventDefault","render","game","round","response","surveyNumber","get","completedWidth","uncompletedWidth","offset","stageNumPosition","marginLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Slider from \"meteor/empirica:slider\";\n\n\nimport { Centered } from \"meteor/empirica:core\";\n\nexport default class MidSurveyFour extends React.Component {\n  state = { sliderValue: 0 };\n\n  handleSliderChange = num => {\n    const { stage, player } = this.props;\n    // Rounding the number to 2 decimals max\n    this.setState({sliderValue : num}) \n    player.stage.set(\"sliderValue\", num);\n  };\n\n  renderLabels = (val) => {\n      if (val === 0) { // Min value\n          return `${val} Poor`;\n      } else if (val === 3) {\n          return `${val} Neutral`;\n      } else if (val === 6) { // Max value\n          return `${val} Happy`;\n      }\n      return \"\"\n  }\n\n  handleSubmit = event => {\n    const { onNext, player } = this.props;\n    event.preventDefault();\n    // TODO: log player response to survey question\n    onNext();\n  };\n\n  \n\n  render() {\n    const { game, round, stage, player } = this.props;\n    const { response } = this.state;\n\n    const surveyNumber = player.get(\"surveyNumber\");\n    const completedWidth = 590/5 * surveyNumber\n    const uncompletedWidth = 590 - completedWidth;\n    const offset = 590/5 * 0.5;\n    const stageNumPosition = completedWidth - offset;\n\n    const sliderValue = this.state.sliderValue;\n    return (\n      <Centered>\n        <div className=\"intro-heading questionnaire-heading\"> To complete the challenge, please fill in the following questionnaire </div>\n            <div className=\"questionnaire-content-container\">\n                <div className=\"progress-bar\">\n                    <div className=\"completed-bar\">\n                        <div className=\"completed-heading\" style={{marginLeft: stageNumPosition }}> {surveyNumber} </div>\n                        <img src={`images/hr-color.png`} width={`${completedWidth} px`} height=\"7px\" />\n                    </div>\n                    <img src={`images/hr-color-dark.png`} width={`${uncompletedWidth} px`} height=\"7px\" />\n                </div>\n                <div className=\"questionnaire-body\">\n                    <label className=\"questionnaire-question\"> On the scale below, rate how your team has been working in the recent trials </label>\n                    <Slider\n                        min={0}\n                        max={6}\n                        stepSize={1}\n                        disabled={false}\n                        showTrackFill={false}\n                        value={sliderValue}\n                        labelRenderer={this.renderLabels}\n                        onChange={this.handleSliderChange}\n                    />\n                    <div className=\"slider-value-container\"> \n                        <div className=\"slider-value\">{sliderValue} </div>\n                    </div>\n\n                </div>\n                <form className=\"questionnaire-btn-container\" onSubmit={this.handleSubmit}>\n                    <button \n                        className=\"arrow-button button-submit\"\n                        type=\"submit\"> Submit </button> \n                </form>\n            </div>\n      </Centered>\n    );\n  }\n}\n"]},"sourceType":"module","hash":"5913e6626844fe79fac43715b9180d742cded484"}
