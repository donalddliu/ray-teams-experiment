{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/donaldliu/Documents/ray-experiment/client/game/Round.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/game/Round.jsx","filename":"/Users/donaldliu/Documents/ray-experiment/client/game/Round.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/donaldliu/Documents/ray-experiment","root":"/Users/donaldliu/Documents/ray-experiment","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/donaldliu/Documents/ray-experiment/client/game/Round.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/game/Round.jsx"}},"code":"module.export({\n  default: () => Round\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PlayerProfile;\nmodule.link(\"./PlayerProfile.jsx\", {\n  default(v) {\n    PlayerProfile = v;\n  }\n\n}, 1);\nlet SocialExposure;\nmodule.link(\"./SocialExposure.jsx\", {\n  default(v) {\n    SocialExposure = v;\n  }\n\n}, 2);\nlet MyNetwork;\nmodule.link(\"./MyNetwork.jsx\", {\n  default(v) {\n    MyNetwork = v;\n  }\n\n}, 3);\nlet StageResult;\nmodule.link(\"./StageResult.jsx\", {\n  default(v) {\n    StageResult = v;\n  }\n\n}, 4);\nlet Results;\nmodule.link(\"./Results.jsx\", {\n  default(v) {\n    Results = v;\n  }\n\n}, 5);\nlet Task;\nmodule.link(\"./Task.jsx\", {\n  default(v) {\n    Task = v;\n  }\n\n}, 6);\nlet Timer;\nmodule.link(\"./Timer.jsx\", {\n  default(v) {\n    Timer = v;\n  }\n\n}, 7);\n\nclass Round extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onOpenChat = otherPlayerNodeId => {\n      const {\n        player\n      } = this.props;\n      var pairOfPlayers = [player.get(\"nodeId\"), parseInt(otherPlayerNodeId)];\n      this.setState({\n        activeChats: this.state.activeChats.push(customKey)\n      });\n      console.log(this.state);\n    };\n\n    this.onCloseChat = customKey => {\n      const newActiveChats = activeChats.filter(chat => chat !== customKey);\n      this.setState({\n        activeChats: newActiveChats\n      });\n      console.log(this.state);\n    };\n\n    this.state = {\n      activeChats: []\n    };\n  }\n\n  render() {\n    const {\n      stage,\n      round,\n      player,\n      game\n    } = this.props; // const showResults = stage.get(\"showResults\");\n    // if (showResults) {\n    //   const result = stage.get(\"result\")\n    //   return (\n    //   <div>\n    //     <StageResult stage={stage} showResults={showResults} result={result} timer={10}/>\n    //   </div>\n    //   )\n    // }\n\n    if (stage.name === \"Result\") {\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Results, {\n        game: game,\n        round: round,\n        stage: stage\n      }), /*#__PURE__*/React.createElement(Timer, {\n        stage: stage\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"round\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"task-network-container\"\n      }, /*#__PURE__*/React.createElement(Task, {\n        game: game,\n        round: round,\n        stage: stage,\n        player: player\n      }), /*#__PURE__*/React.createElement(MyNetwork, {\n        game: game,\n        round: round,\n        stage: stage,\n        player: player,\n        onOpenChat: this.onOpenChat\n      })), /*#__PURE__*/React.createElement(SocialExposure, {\n        game: game,\n        round: round,\n        stage: stage,\n        player: player,\n        onCloseChat: this.onCloseChat,\n        activeChats: this.state.activeChats\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["client/game/Round.jsx"],"names":["module","export","default","Round","React","link","v","PlayerProfile","SocialExposure","MyNetwork","StageResult","Results","Task","Timer","Component","constructor","props","onOpenChat","otherPlayerNodeId","player","pairOfPlayers","get","parseInt","setState","activeChats","state","push","customKey","console","log","onCloseChat","newActiveChats","filter","chat","render","stage","round","game","name"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,OAAO,EAAC,MAAIC;AAAb,CAAd;AAAmC,IAAIC,KAAJ;AAAUJ,MAAM,CAACK,IAAP,CAAY,OAAZ,EAAoB;AAACH,EAAAA,OAAO,CAACI,CAAD,EAAG;AAACF,IAAAA,KAAK,GAACE,CAAN;AAAQ;;AAApB,CAApB,EAA0C,CAA1C;AAA6C,IAAIC,aAAJ;AAAkBP,MAAM,CAACK,IAAP,CAAY,qBAAZ,EAAkC;AAACH,EAAAA,OAAO,CAACI,CAAD,EAAG;AAACC,IAAAA,aAAa,GAACD,CAAd;AAAgB;;AAA5B,CAAlC,EAAgE,CAAhE;AAAmE,IAAIE,cAAJ;AAAmBR,MAAM,CAACK,IAAP,CAAY,sBAAZ,EAAmC;AAACH,EAAAA,OAAO,CAACI,CAAD,EAAG;AAACE,IAAAA,cAAc,GAACF,CAAf;AAAiB;;AAA7B,CAAnC,EAAkE,CAAlE;AAAqE,IAAIG,SAAJ;AAAcT,MAAM,CAACK,IAAP,CAAY,iBAAZ,EAA8B;AAACH,EAAAA,OAAO,CAACI,CAAD,EAAG;AAACG,IAAAA,SAAS,GAACH,CAAV;AAAY;;AAAxB,CAA9B,EAAwD,CAAxD;AAA2D,IAAII,WAAJ;AAAgBV,MAAM,CAACK,IAAP,CAAY,mBAAZ,EAAgC;AAACH,EAAAA,OAAO,CAACI,CAAD,EAAG;AAACI,IAAAA,WAAW,GAACJ,CAAZ;AAAc;;AAA1B,CAAhC,EAA4D,CAA5D;AAA+D,IAAIK,OAAJ;AAAYX,MAAM,CAACK,IAAP,CAAY,eAAZ,EAA4B;AAACH,EAAAA,OAAO,CAACI,CAAD,EAAG;AAACK,IAAAA,OAAO,GAACL,CAAR;AAAU;;AAAtB,CAA5B,EAAoD,CAApD;AAAuD,IAAIM,IAAJ;AAASZ,MAAM,CAACK,IAAP,CAAY,YAAZ,EAAyB;AAACH,EAAAA,OAAO,CAACI,CAAD,EAAG;AAACM,IAAAA,IAAI,GAACN,CAAL;AAAO;;AAAnB,CAAzB,EAA8C,CAA9C;AAAiD,IAAIO,KAAJ;AAAUb,MAAM,CAACK,IAAP,CAAY,aAAZ,EAA0B;AAACH,EAAAA,OAAO,CAACI,CAAD,EAAG;AAACO,IAAAA,KAAK,GAACP,CAAN;AAAQ;;AAApB,CAA1B,EAAgD,CAAhD;;AAUvhB,MAAMH,KAAN,SAAoBC,KAAK,CAACU,SAA1B,CAAoC;AACjDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,UAPmB,GAOLC,iBAAD,IAAuB;AAClC,YAAM;AAACC,QAAAA;AAAD,UAAW,KAAKH,KAAtB;AACA,UAAII,aAAa,GAAG,CAACD,MAAM,CAACE,GAAP,CAAW,QAAX,CAAD,EAAuBC,QAAQ,CAACJ,iBAAD,CAA/B,CAApB;AAEA,WAAKK,QAAL,CAAc;AAACC,QAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWD,WAAX,CAAuBE,IAAvB,CAA4BC,SAA5B;AAAd,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;AACD,KAbkB;;AAAA,SAenBK,WAfmB,GAeJH,SAAD,IAAe;AAC3B,YAAMI,cAAc,GAAGP,WAAW,CAACQ,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,KAAKN,SAAtC,CAAvB;AACA,WAAKJ,QAAL,CAAc;AAACC,QAAAA,WAAW,EAAGO;AAAf,OAAd;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;AACD,KAnBkB;;AAEjB,SAAKA,KAAL,GAAa;AACXD,MAAAA,WAAW,EAAG;AADH,KAAb;AAGH;;AAgBCU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBjB,MAAAA,MAAhB;AAAwBkB,MAAAA;AAAxB,QAAiC,KAAKrB,KAA5C,CADO,CAEP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAImB,KAAK,CAACG,IAAN,KAAe,QAAnB,EAA6B;AAC3B,0BACE,8CACE,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAED,IAAf;AAAqB,QAAA,KAAK,EAAED,KAA5B;AAAmC,QAAA,KAAK,EAAED;AAA1C,QADF,eAEE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEA;AAAd,QAFF,CADF;AAMD,KAPD,MAOO;AAEL,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBAEE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEE,IAAZ;AAAkB,QAAA,KAAK,EAAED,KAAzB;AAAgC,QAAA,KAAK,EAAED,KAAvC;AAA8C,QAAA,MAAM,EAAEhB;AAAtD,QADF,eAEE,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAEkB,IAAjB;AAAuB,QAAA,KAAK,EAAED,KAA9B;AAAqC,QAAA,KAAK,EAAED,KAA5C;AAAmD,QAAA,MAAM,EAAEhB,MAA3D;AAAmE,QAAA,UAAU,EAAE,KAAKF;AAApF,QAFF,CAFF,eAME,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAEoB,IAAtB;AAA4B,QAAA,KAAK,EAAED,KAAnC;AAA0C,QAAA,KAAK,EAAED,KAAjD;AAAwD,QAAA,MAAM,EAAEhB,MAAhE;AAAwE,QAAA,WAAW,EAAE,KAAKW,WAA1F;AAAuG,QAAA,WAAW,EAAE,KAAKL,KAAL,CAAWD;AAA/H,QANF,CADF,CADF;AAaD;AACF;;AA1DgD","sourcesContent":["import React from \"react\";\n\nimport PlayerProfile from \"./PlayerProfile.jsx\";\nimport SocialExposure from \"./SocialExposure.jsx\";\nimport MyNetwork from \"./MyNetwork.jsx\";\nimport StageResult from \"./StageResult.jsx\";\nimport Results from \"./Results.jsx\";\nimport Task from \"./Task.jsx\";\nimport Timer from \"./Timer.jsx\";\n\nexport default class Round extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeChats : [],\n    }\n}\n\n  onOpenChat = (otherPlayerNodeId) => {\n    const {player} = this.props;\n    var pairOfPlayers = [player.get(\"nodeId\"), parseInt(otherPlayerNodeId)]\n\n    this.setState({activeChats: this.state.activeChats.push(customKey)});\n    console.log(this.state);\n  }\n\n  onCloseChat = (customKey) => {\n    const newActiveChats = activeChats.filter((chat) => chat !== customKey);\n    this.setState({activeChats : newActiveChats});\n    console.log(this.state);\n  }\n\n  render() {\n    const { stage, round, player, game } = this.props;\n    // const showResults = stage.get(\"showResults\");\n\n    // if (showResults) {\n    //   const result = stage.get(\"result\")\n    //   return (\n    //   <div>\n    //     <StageResult stage={stage} showResults={showResults} result={result} timer={10}/>\n    //   </div>\n    //   )\n    // }\n\n    if (stage.name === \"Result\") {\n      return (\n        <div>\n          <Results game={game} round={round} stage={stage}/> \n          <Timer stage={stage}/>\n        </div>\n      )\n    } else {\n      \n      return (\n        <div className=\"round\">\n          <div className=\"content\">\n            {/* <PlayerProfile player={player} stage={stage} game={game} /> */}\n            <div className=\"task-network-container\">\n              <Task game={game} round={round} stage={stage} player={player} />\n              <MyNetwork game={game} round={round} stage={stage} player={player} onOpenChat={this.onOpenChat}/>\n            </div>\n            <SocialExposure game={game} round={round} stage={stage} player={player} onCloseChat={this.onCloseChat} activeChats={this.state.activeChats} />\n            {/* <Timer stage={stage} /> */}\n          </div>\n        </div>\n      );\n    }\n  } \n}\n"]},"sourceType":"module","hash":"b0d70cd1fd18fbe157caa1705f7c98d2304dccb2"}
